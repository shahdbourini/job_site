{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\nadrec\\\\src\\\\components\\\\table\\\\EditableTable.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport { Table, Input, Button, Popconfirm, Form, Space, Select } from 'antd';\nimport './style-table.css';\nimport edit from \"../../images/edit.svg\";\nimport deletee from \"../../images/delete.svg\";\nimport { Link } from 'react-router-dom';\nconst EditableContext = /*#__PURE__*/React.createContext(null);\n\nconst EditableRow = ({\n  index,\n  ...props\n}) => {\n  _s();\n\n  const [form] = Form.useForm();\n  return /*#__PURE__*/_jsxDEV(Form, {\n    form: form,\n    component: false,\n    children: /*#__PURE__*/_jsxDEV(EditableContext.Provider, {\n      value: form,\n      children: /*#__PURE__*/_jsxDEV(\"tr\", { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditableRow, \"rI7DrJIrFu7YmlGWYiMFTzs8jF0=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = EditableRow;\nconst {\n  Option\n} = Select;\n\nconst EditableCell = ({\n  title,\n  editable,\n  children,\n  dataIndex,\n  record,\n  handleSave,\n  ...restProps\n}) => {\n  _s2();\n\n  const [editing, setEditing] = useState(false);\n  const inputRef = useRef(null);\n  const form = useContext(EditableContext);\n  useEffect(() => {\n    if (editing) {\n      inputRef.current.focus();\n    }\n  }, [editing]);\n\n  const toggleEdit = () => {\n    setEditing(!editing);\n    form.setFieldsValue({\n      [dataIndex]: record[dataIndex]\n    });\n  };\n\n  const save = async () => {\n    try {\n      const values = await form.validateFields();\n      toggleEdit();\n      handleSave({ ...record,\n        ...values\n      });\n    } catch (errInfo) {\n      console.log('Save failed:', errInfo);\n    }\n  };\n\n  let childNode = children;\n\n  if (editable) {\n    childNode = editing ? /*#__PURE__*/_jsxDEV(Form.Item, {\n      style: {\n        margin: 0\n      },\n      name: dataIndex,\n      rules: [{\n        required: true,\n        message: `${title} is required.`\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        ref: inputRef,\n        onPressEnter: save,\n        onBlur: save\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editable-cell-value-wrap\",\n      style: {\n        paddingRight: 24\n      },\n      onClick: toggleEdit,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"td\", { ...restProps,\n    children: childNode\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 10\n  }, this);\n}; // function onChange(pagination, filters, sorter, extra) {\n//   console.log('params', pagination, filters, sorter, extra);\n// }\n\n\n_s2(EditableCell, \"IMw7TsWhFd8T/FybyizRtPpww8A=\");\n\n_c2 = EditableCell;\n\nclass EditableTable extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeS = value => {\n      // console.log(`selected ${value}`);\n      const dataSource = [...this.state.dataSource];\n      const result = !value ? dataSource : dataSource.filter(item => item.location.includes(value));\n\n      if (value === 'all') {\n        this.setState({\n          result: dataSource\n        });\n      } else {\n        this.setState({\n          input: value,\n          result: result\n        });\n      }\n\n      console.log(result);\n    };\n\n    this.handleDelete = key => {\n      const dataSource2 = [...this.state.result];\n      this.setState({\n        result: dataSource2.filter(item => item.key !== key)\n      });\n    };\n\n    this.handleAdd = () => {\n      const {\n        count,\n        dataSource,\n        result\n      } = this.state;\n      const newData = {\n        key: count,\n        id: `${count}`,\n        title: '32',\n        location: `London, Park Lane no. ${count}`,\n        Sdate: '5-10',\n        Edate: '9-10',\n        status: 'yes'\n      };\n      this.setState({\n        dataSource: [...dataSource, newData],\n        result: [...result, newData],\n        count: count + 1\n      });\n    };\n\n    this.handleSave = row => {\n      // const newData = [...this.state.dataSource];\n      const newData2 = [...this.state.result]; // const index = newData.findIndex((item) => row.key === item.key);\n\n      const index2 = newData2.findIndex(item => row.key === item.key); // const item = newData[index];\n\n      const item2 = newData2[index2]; // newData.splice(index, 1, { ...item, ...row });\n\n      newData2.splice(index2, 1, { ...item2,\n        ...row\n      });\n      this.setState({\n        // dataSource: newData,\n        result: newData2\n      });\n    };\n\n    this.columns = [{\n      title: '#',\n      dataIndex: 'id',\n      width: '5%' // editable: true,\n\n    }, {\n      title: 'JOB TITLE',\n      dataIndex: 'title'\n    }, {\n      title: 'JOB LOCATION',\n      dataIndex: 'location' // filters: [\n      //   {\n      //     text: 'London',\n      //     value: 'London',\n      //   },\n      //   {\n      //     text: 'New York',\n      //     value: 'New York',\n      //   },\n      // ],\n      // filterMultiple: false,\n      // filterDropdownVisible: true,\n      // onFilter: (value, record) => record.location.indexOf(value) === 0,\n      // sorter: (a, b) => a.location.length - b.location.length,\n      // sortDirections: ['descend', 'ascend'],\n\n    }, {\n      title: 'START DATE',\n      dataIndex: 'Sdate'\n    }, {\n      title: 'END DATE',\n      dataIndex: 'Edate'\n    }, {\n      title: 'STATUS',\n      dataIndex: 'status'\n    }, {\n      title: '',\n      dataIndex: 'operation',\n      width: '20%',\n      render: (_, record) => /*#__PURE__*/_jsxDEV(Space, {\n        size: \"middle\",\n        style: {\n          cursor: 'pointer'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: edit,\n          alt: \"edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Popconfirm, {\n          title: \"Sure to delete?\",\n          onConfirm: () => this.handleDelete(record.key),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: deletee,\n            alt: \"delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this)\n    }];\n    this.state = {\n      dataSource: [{\n        key: '0',\n        id: '0',\n        title: '32',\n        location: 'London',\n        Sdate: '5-10',\n        Edate: '9-10',\n        status: 'yes'\n      }, {\n        key: '1',\n        id: ' 1',\n        title: '32',\n        location: 'New York',\n        Sdate: '5-10',\n        Edate: '9-10',\n        status: 'yes'\n      }],\n      count: 2,\n      input: '',\n      result: ''\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      result: this.state.dataSource\n    });\n  }\n\n  render() {\n    const {\n      dataSource,\n      result\n    } = this.state;\n    const components = {\n      body: {\n        row: EditableRow,\n        cell: EditableCell\n      }\n    };\n    const columns = this.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n\n      return { ...col,\n        onCell: record => ({\n          record,\n          editable: col.editable,\n          dataIndex: col.dataIndex,\n          title: col.title,\n          handleSave: this.handleSave\n        })\n      };\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selectJob\",\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          style: {\n            width: `100px`\n          },\n          placeholder: \"Jobs \",\n          optionFilterProp: \"children\",\n          onChange: this.onChangeS,\n          filterOption: (input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n          children: [/*#__PURE__*/_jsxDEV(Option, {\n            value: \"Job categories\",\n            children: \"Job categories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"Job locations\",\n            children: \"Job locations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"Job applications\",\n            children: \"Job applications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"Job on board\",\n            children: \"Job on board\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"Skills\",\n            children: \"Skills\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/NewJob\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.handleAdd,\n          type: \"primary\",\n          style: {\n            marginBottom: 16,\n            background: `#509EFC 0% 0% no-repeat padding-box`,\n            borderRadius: `6px`,\n            opacity: `1`,\n            float: `right`,\n            marginTop: `107px`,\n            marginRight: `10%`\n          },\n          children: \"CREATE NEW JOB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        showSearch: true,\n        style: {\n          width: `15%`,\n          float: `right`,\n          marginRight: `1%`,\n          marginTop: `106px`\n        },\n        placeholder: \"FILTTER STATUS : ALL \",\n        optionFilterProp: \"children\",\n        onChange: this.onChangeS,\n        filterOption: (input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n        children: [/*#__PURE__*/_jsxDEV(Option, {\n          value: \"all\",\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Option, {\n          value: \"New York\",\n          children: \"New York\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Option, {\n          value: \"London\",\n          children: \"London\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        components: components,\n        rowClassName: () => 'editable-row',\n        dataSource: result,\n        columns: columns //   onChange={onChange}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default EditableTable;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EditableRow\");\n$RefreshReg$(_c2, \"EditableCell\");","map":{"version":3,"sources":["F:/nadrec/src/components/table/EditableTable.js"],"names":["React","useContext","useState","useEffect","useRef","ReactDOM","Table","Input","Button","Popconfirm","Form","Space","Select","Link","EditableContext","createContext","EditableRow","index","props","form","useForm","Option","EditableCell","title","editable","children","dataIndex","record","handleSave","restProps","editing","setEditing","inputRef","current","focus","toggleEdit","setFieldsValue","save","values","validateFields","errInfo","console","log","childNode","margin","required","message","paddingRight","EditableTable","Component","constructor","onChangeS","value","dataSource","state","result","filter","item","location","includes","setState","input","handleDelete","key","dataSource2","handleAdd","count","newData","id","Sdate","Edate","status","row","newData2","index2","findIndex","item2","splice","columns","width","render","_","cursor","edit","deletee","componentDidMount","components","body","cell","map","col","onCell","option","toLowerCase","indexOf","marginBottom","background","borderRadius","opacity","float","marginTop","marginRight"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect, useRef } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport { Table, Input, Button, Popconfirm, Form, Space, Select } from 'antd';\r\nimport './style-table.css';\r\nimport edit from '../../images/edit.svg';\r\nimport deletee from '../../images/delete.svg';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst EditableContext = React.createContext(null);\r\n\r\nconst EditableRow = ({ index, ...props }) => {\r\n  const [form] = Form.useForm();\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <EditableContext.Provider value={form}>\r\n        <tr {...props} />\r\n      </EditableContext.Provider>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst { Option } = Select;\r\n\r\nconst EditableCell = ({\r\n  title,\r\n  editable,\r\n  children,\r\n  dataIndex,\r\n  record,\r\n  handleSave,\r\n  ...restProps\r\n}) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const inputRef = useRef(null);\r\n  const form = useContext(EditableContext);\r\n  useEffect(() => {\r\n    if (editing) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [editing]);\r\n\r\n  const toggleEdit = () => {\r\n    setEditing(!editing);\r\n    form.setFieldsValue({\r\n      [dataIndex]: record[dataIndex],\r\n    });\r\n  };\r\n\r\n  const save = async () => {\r\n    try {\r\n      const values = await form.validateFields();\r\n      toggleEdit();\r\n      handleSave({ ...record, ...values });\r\n    } catch (errInfo) {\r\n      console.log('Save failed:', errInfo);\r\n    }\r\n  };\r\n\r\n  let childNode = children;\r\n\r\n  if (editable) {\r\n    childNode = editing ? (\r\n      <Form.Item\r\n        style={{\r\n          margin: 0,\r\n        }}\r\n        name={dataIndex}\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: `${title} is required.`,\r\n          },\r\n        ]}\r\n      >\r\n        <Input ref={inputRef} onPressEnter={save} onBlur={save} />\r\n      </Form.Item>\r\n    ) : (\r\n      <div\r\n        className=\"editable-cell-value-wrap\"\r\n        style={{\r\n          paddingRight: 24,\r\n        }}\r\n        onClick={toggleEdit}\r\n      >\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <td {...restProps}>{childNode}</td>;\r\n};\r\n\r\n// function onChange(pagination, filters, sorter, extra) {\r\n//   console.log('params', pagination, filters, sorter, extra);\r\n// }\r\n\r\nclass EditableTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.columns = [\r\n      {\r\n        title: '#',\r\n        dataIndex: 'id',\r\n        width: '5%',\r\n        // editable: true,\r\n      },\r\n      {\r\n        title: 'JOB TITLE',\r\n        dataIndex: 'title',\r\n      },\r\n      {\r\n        title: 'JOB LOCATION',\r\n        dataIndex: 'location',\r\n        // filters: [\r\n        //   {\r\n        //     text: 'London',\r\n        //     value: 'London',\r\n        //   },\r\n        //   {\r\n        //     text: 'New York',\r\n        //     value: 'New York',\r\n        //   },\r\n        // ],\r\n        // filterMultiple: false,\r\n        // filterDropdownVisible: true,\r\n        // onFilter: (value, record) => record.location.indexOf(value) === 0,\r\n        // sorter: (a, b) => a.location.length - b.location.length,\r\n        // sortDirections: ['descend', 'ascend'],\r\n      },\r\n      {\r\n        title: 'START DATE',\r\n        dataIndex: 'Sdate',\r\n      },\r\n      {\r\n        title: 'END DATE',\r\n        dataIndex: 'Edate',\r\n      },\r\n      {\r\n        title: 'STATUS',\r\n        dataIndex: 'status',\r\n      },\r\n      {\r\n        title: '',\r\n        dataIndex: 'operation',\r\n        width: '20%',\r\n        render: (_, record) => (\r\n          <Space size=\"middle\" style={{ cursor: 'pointer' }}>\r\n            {/* <a>Edit</a> */}\r\n            <img src={edit} alt=\"edit\" />\r\n            <Popconfirm\r\n              title=\"Sure to delete?\"\r\n              onConfirm={() => this.handleDelete(record.key)}\r\n            >\r\n              {/* <a>Delete</a> */}\r\n              <img src={deletee} alt=\"delete\" />\r\n            </Popconfirm>\r\n          </Space>\r\n        ),\r\n      },\r\n    ];\r\n    this.state = {\r\n      dataSource: [\r\n        {\r\n          key: '0',\r\n          id: '0',\r\n          title: '32',\r\n          location: 'London',\r\n          Sdate: '5-10',\r\n          Edate: '9-10',\r\n          status: 'yes',\r\n        },\r\n        {\r\n          key: '1',\r\n          id: ' 1',\r\n          title: '32',\r\n          location: 'New York',\r\n          Sdate: '5-10',\r\n          Edate: '9-10',\r\n          status: 'yes',\r\n        },\r\n      ],\r\n      count: 2,\r\n      input: '',\r\n      result: '',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      result: this.state.dataSource,\r\n    });\r\n  }\r\n\r\n  onChangeS = (value) => {\r\n    // console.log(`selected ${value}`);\r\n\r\n    const dataSource = [...this.state.dataSource];\r\n    const result = !value\r\n      ? dataSource\r\n      : dataSource.filter((item) => item.location.includes(value));\r\n\r\n    if (value === 'all') {\r\n      this.setState({\r\n        result: dataSource,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        input: value,\r\n        result: result,\r\n      });\r\n    }\r\n    console.log(result);\r\n  };\r\n\r\n  handleDelete = (key) => {\r\n    const dataSource2 = [...this.state.result];\r\n    this.setState({\r\n      result: dataSource2.filter((item) => item.key !== key),\r\n    });\r\n  };\r\n  handleAdd = () => {\r\n    const { count, dataSource, result } = this.state;\r\n    const newData = {\r\n      key: count,\r\n      id: `${count}`,\r\n      title: '32',\r\n      location: `London, Park Lane no. ${count}`,\r\n      Sdate: '5-10',\r\n      Edate: '9-10',\r\n      status: 'yes',\r\n    };\r\n    this.setState({\r\n      dataSource: [...dataSource, newData],\r\n      result: [...result, newData],\r\n      count: count + 1,\r\n    });\r\n  };\r\n  handleSave = (row) => {\r\n    // const newData = [...this.state.dataSource];\r\n    const newData2 = [...this.state.result];\r\n    // const index = newData.findIndex((item) => row.key === item.key);\r\n    const index2 = newData2.findIndex((item) => row.key === item.key);\r\n    // const item = newData[index];\r\n    const item2 = newData2[index2];\r\n    // newData.splice(index, 1, { ...item, ...row });\r\n    newData2.splice(index2, 1, { ...item2, ...row });\r\n    this.setState({\r\n      // dataSource: newData,\r\n      result: newData2,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { dataSource, result } = this.state;\r\n\r\n    const components = {\r\n      body: {\r\n        row: EditableRow,\r\n        cell: EditableCell,\r\n      },\r\n    };\r\n    const columns = this.columns.map((col) => {\r\n      if (!col.editable) {\r\n        return col;\r\n      }\r\n\r\n      return {\r\n        ...col,\r\n        onCell: (record) => ({\r\n          record,\r\n          editable: col.editable,\r\n          dataIndex: col.dataIndex,\r\n          title: col.title,\r\n          handleSave: this.handleSave,\r\n        }),\r\n      };\r\n    });\r\n    return (\r\n      <div>\r\n        <div className=\"selectJob\">\r\n          <Select\r\n            style={{\r\n              width: `100px`,\r\n            }}\r\n            placeholder=\"Jobs \"\r\n            optionFilterProp=\"children\"\r\n            onChange={this.onChangeS}\r\n            filterOption={(input, option) =>\r\n              option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n            }\r\n          >\r\n            <Option value=\"Job categories\">Job categories</Option>\r\n            <Option value=\"Job locations\">Job locations</Option>\r\n            <Option value=\"Job applications\">Job applications</Option>\r\n            <Option value=\"Job on board\">Job on board</Option>\r\n            <Option value=\"Skills\">Skills</Option>\r\n          </Select>\r\n        </div>\r\n\r\n        <Link to=\"/NewJob\">\r\n          <Button\r\n            onClick={this.handleAdd}\r\n            type=\"primary\"\r\n            style={{\r\n              marginBottom: 16,\r\n              background: `#509EFC 0% 0% no-repeat padding-box`,\r\n              borderRadius: `6px`,\r\n              opacity: `1`,\r\n              float: `right`,\r\n              marginTop: `107px`,\r\n              marginRight: `10%`,\r\n            }}\r\n          >\r\n            CREATE NEW JOB\r\n          </Button>\r\n        </Link>\r\n\r\n        <Select\r\n          showSearch\r\n          style={{\r\n            width: `15%`,\r\n            float: `right`,\r\n            marginRight: `1%`,\r\n            marginTop: `106px`,\r\n          }}\r\n          placeholder=\"FILTTER STATUS : ALL \"\r\n          optionFilterProp=\"children\"\r\n          onChange={this.onChangeS}\r\n          filterOption={(input, option) =>\r\n            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n          }\r\n        >\r\n          <Option value=\"all\">All</Option>\r\n          <Option value=\"New York\">New York</Option>\r\n          <Option value=\"London\">London</Option>\r\n        </Select>\r\n\r\n        <Table\r\n          components={components}\r\n          rowClassName={() => 'editable-row'}\r\n          dataSource={result}\r\n          columns={columns}\r\n          //   onChange={onChange}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditableTable;\r\n"]},"metadata":{},"sourceType":"module"}