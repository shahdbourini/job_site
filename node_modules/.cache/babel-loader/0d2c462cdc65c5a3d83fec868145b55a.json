{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\nadrec\\\\src\\\\components\\\\job-board\\\\DragDrop.js\";\nimport React, { Component } from 'react';\nexport default class DragDrop extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tasks: [{\n        name: 'Learn Angular',\n        category: 'wip',\n        bgcolor: 'yellow'\n      }, {\n        name: 'React',\n        category: 'wip',\n        bgcolor: 'pink'\n      }, {\n        name: 'Vue',\n        category: 'complete',\n        bgcolor: 'skyblue'\n      }],\n      wip: [],\n      completed: [{\n        wip: []\n      }, {\n        completed: []\n      }],\n      count1: 0,\n      count2: 0\n    };\n\n    this.onDragStart = (ev, id) => {\n      console.log('dragstart:', id);\n      ev.dataTransfer.setData('id', id);\n    };\n\n    this.onDragOver = ev => {\n      ev.preventDefault();\n    };\n\n    this.onDrop = (ev, cat) => {\n      let id = ev.dataTransfer.getData('id');\n      let tasks = this.state.tasks.filter(task => {\n        if (task.name === id) {\n          task.category = cat;\n        }\n\n        return task;\n      });\n      this.setState({ ...this.state,\n        tasks\n      });\n    };\n  }\n\n  render() {\n    var taskss = {\n      wip: [],\n      complete: []\n    };\n    var count1 = 0;\n    var count2 = 0;\n    this.state.tasks.forEach(t => {\n      this.state.taskss[t.category].push( /*#__PURE__*/_jsxDEV(\"div\", {\n        onDragStart: e => this.onDragStart(e, t.name),\n        draggable: true,\n        className: \"draggable\",\n        style: {\n          backgroundColor: t.bgcolor\n        },\n        children: [t.name, t.category === 'wip' ? count1 = count1 + 1 : count2 = count2 + 1]\n      }, t.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this));\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-drag\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"header\",\n        children: \"DRAG & DROP DEMO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wip\",\n        onDragOver: e => this.onDragOver(e),\n        onDrop: e => {\n          this.onDrop(e, 'wip');\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"task-header\",\n          children: \"WIP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), taskss.wip]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"droppable\",\n        onDragOver: e => this.onDragOver(e),\n        onDrop: e => this.onDrop(e, 'complete'),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"task-header\",\n          children: \"COMPLETED\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), taskss.complete]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["F:/nadrec/src/components/job-board/DragDrop.js"],"names":["React","Component","DragDrop","state","tasks","name","category","bgcolor","wip","completed","count1","count2","onDragStart","ev","id","console","log","dataTransfer","setData","onDragOver","preventDefault","onDrop","cat","getData","filter","task","setState","render","taskss","complete","forEach","t","push","e","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class DragDrop extends Component {\r\n  state = {\r\n    tasks: [\r\n      { name: 'Learn Angular', category: 'wip', bgcolor: 'yellow' },\r\n      { name: 'React', category: 'wip', bgcolor: 'pink' },\r\n      { name: 'Vue', category: 'complete', bgcolor: 'skyblue' },\r\n    ],\r\n    wip: [],\r\n    completed: [\r\n      {wip:[]},\r\n      {completed:[]}\r\n    ],\r\n    count1: 0,\r\n    count2: 0,\r\n  };\r\n\r\n  onDragStart = (ev, id) => {\r\n    console.log('dragstart:', id);\r\n    ev.dataTransfer.setData('id', id);\r\n  };\r\n\r\n  onDragOver = (ev) => {\r\n    ev.preventDefault();\r\n  };\r\n\r\n  onDrop = (ev, cat) => {\r\n    let id = ev.dataTransfer.getData('id');\r\n\r\n    let tasks = this.state.tasks.filter((task) => {\r\n      if (task.name === id) {\r\n        task.category = cat;\r\n      }\r\n      return task;\r\n    });\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      tasks,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    var taskss = {\r\n      wip: [],\r\n      complete: [],\r\n    };\r\n    var count1 = 0;\r\n    var count2 = 0;\r\n    this.state.tasks.forEach((t) => {\r\n      this.state.taskss[t.category].push(\r\n        <div\r\n          key={t.name}\r\n          onDragStart={(e) => this.onDragStart(e, t.name)}\r\n          draggable\r\n          className=\"draggable\"\r\n          style={{ backgroundColor: t.bgcolor }}\r\n        >\r\n          {t.name}\r\n\r\n          {t.category === 'wip' ? (count1 = count1 + 1) : (count2 = count2 + 1)}\r\n        </div>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"container-drag\">\r\n        <h2 className=\"header\">DRAG & DROP DEMO</h2>\r\n        <div\r\n          className=\"wip\"\r\n          onDragOver={(e) => this.onDragOver(e)}\r\n          onDrop={(e) => {\r\n            this.onDrop(e, 'wip');\r\n          }}\r\n        >\r\n          <span className=\"task-header\">WIP</span>\r\n          {taskss.wip}\r\n        </div>\r\n        <div\r\n          className=\"droppable\"\r\n          onDragOver={(e) => this.onDragOver(e)}\r\n          onDrop={(e) => this.onDrop(e, 'complete')}\r\n        >\r\n          <span className=\"task-header\">COMPLETED</span>\r\n          {taskss.complete}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}