{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\nadrec\\\\src\\\\components\\\\job-board\\\\JobBoard.js\",\n    _s = $RefreshSig$();\n\nimport { Input, DatePicker, Button, Select, Col, Row } from 'antd';\nimport React, { useState, useEffect } from 'react';\nimport DragDrop from '../drag-and-drop/DragDrop';\nimport './style-jobBoard.css';\n\nfunction JobBoard(props) {\n  _s();\n\n  const {\n    Option\n  } = Select;\n  const [job, setJob] = useState();\n  const [selected, setSelected] = useState();\n  const [resultTemp, setResultTemp] = useState([]);\n  const [tasks, setTasks] = useState([{\n    id: '1',\n    name: 'Shahd Bourini',\n    special: 'computer Engineer',\n    Interviewer: 'AhmAd M, Mosab A',\n    AppliedDate: ' 12-12-2021',\n    category: 'Applied'\n  }, {\n    id: '2',\n    name: 'ShBourini',\n    special: 'IT',\n    Interviewer: 'AhmAd M, Mosab A',\n    AppliedDate: ' 12-12-2021',\n    category: 'Applied'\n  }, {\n    id: '3',\n    name: 'Shahd',\n    special: 'UI/UX Developer',\n    Interviewer: 'AhmAd M, Mosab A',\n    AppliedDate: ' 06-06-2020',\n    category: 'Interview'\n  }, {\n    id: '4',\n    name: 'Shahd Bourini',\n    special: 'computer Engineer',\n    Interviewer: 'AhmAd M, Mosab A',\n    AppliedDate: ' 12-12-2021',\n    category: 'Phone'\n  }, {\n    id: '5',\n    name: 'Shahd Al-Bourini',\n    special: 'IT',\n    Interviewer: 'AhmAd M, Mosab A',\n    AppliedDate: ' 12-05-2021',\n    category: 'Hired'\n  }]);\n  useEffect(() => {\n    setResultTemp(tasks);\n  }, [resultTemp]);\n\n  const onDragStart = (ev, id) => {\n    ev.dataTransfer.setData('id', id);\n  };\n\n  const onDragOver = ev => {\n    ev.preventDefault();\n  };\n\n  const onDrop = (ev, cat) => {\n    let id = ev.dataTransfer.getData('id');\n    let tasksNew = tasks.filter(task => {\n      if (task.id === id) {\n        task.category = cat;\n      }\n\n      return task;\n    });\n    setTasks(tasksNew);\n  };\n\n  const selectResult = item => {\n    setJob(item);\n  };\n\n  const applyFilter = () => {\n    const results = !job ? resultTemp : resultTemp.filter(item => item.special.toLowerCase().includes(job.toLowerCase()));\n\n    if (job === 'All') {\n      setTasks(resultTemp);\n    } else {\n      // setInput(value);\n      setTasks(results);\n    }\n  };\n\n  const resetFilter = () => {\n    setTasks(resultTemp);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      gutter: [0, 8],\n      style: {\n        paddingTop: `30px`\n      },\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: {\n          span: 7,\n          offset: 1\n        },\n        sm: {\n          span: 7,\n          offset: 1\n        },\n        md: {\n          span: 4,\n          offset: 1\n        },\n        lg: {\n          span: 4,\n          offset: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(DatePicker, {\n          placeholder: \"Show result from\",\n          className: \"JobBoard-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: {\n          span: 7,\n          offset: 0\n        },\n        sm: {\n          span: 7,\n          offset: 0\n        },\n        md: {\n          span: 4,\n          offset: 0\n        },\n        lg: {\n          span: 4,\n          offset: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(DatePicker, {\n          placeholder: \"Show result to\",\n          className: \"JobBoard-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: {\n          span: 7,\n          offset: 0\n        },\n        sm: {\n          span: 7,\n          offset: 0\n        },\n        md: {\n          span: 4,\n          offset: 0\n        },\n        lg: {\n          span: 4,\n          offset: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          style: {\n            width: `95%`,\n            borderRadius: `6px`\n          },\n          className: \"JobBoard-input\",\n          placeholder: \"All Jobs\",\n          onChange: selectResult,\n          value: selected,\n          children: [/*#__PURE__*/_jsxDEV(Option, {\n            value: \"All\",\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"UI/UX Developer\",\n            children: \"UI/UX Developer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"Computer Engineer\",\n            children: \"Computer Engineer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"IT\",\n            children: \"IT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: {\n          span: 20,\n          offset: 1\n        },\n        sm: {\n          span: 11,\n          offset: 1\n        },\n        md: {\n          span: 9,\n          offset: 0\n        },\n        lg: {\n          span: 10,\n          offset: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"jobBoard\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: applyFilter,\n            children: \"Apply\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: resetFilter,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            children: \"Table View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDrop, {\n      tasks: tasks,\n      onDragStart: onDragStart,\n      onDragOver: onDragOver,\n      onDrop: onDrop\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(JobBoard, \"O0WEmrTN/eFZDpFNYMGO0t2vBio=\");\n\n_c = JobBoard;\nexport default JobBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobBoard\");","map":{"version":3,"sources":["F:/nadrec/src/components/job-board/JobBoard.js"],"names":["Input","DatePicker","Button","Select","Col","Row","React","useState","useEffect","DragDrop","JobBoard","props","Option","job","setJob","selected","setSelected","resultTemp","setResultTemp","tasks","setTasks","id","name","special","Interviewer","AppliedDate","category","onDragStart","ev","dataTransfer","setData","onDragOver","preventDefault","onDrop","cat","getData","tasksNew","filter","task","selectResult","item","applyFilter","results","toLowerCase","includes","resetFilter","paddingTop","span","offset","width","borderRadius"],"mappings":"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","sourcesContent":["import { Input, DatePicker, Button, Select, Col, Row } from 'antd';\r\nimport React, { useState, useEffect } from 'react';\r\nimport DragDrop from '../drag-and-drop/DragDrop';\r\nimport './style-jobBoard.css';\r\n\r\nfunction JobBoard(props) {\r\n  const { Option } = Select;\r\n  const [job, setJob] = useState();\r\n  const [selected, setSelected] = useState();\r\n  const [resultTemp, setResultTemp] = useState([]);\r\n  const [tasks, setTasks] = useState([\r\n    {\r\n      id: '1',\r\n      name: 'Shahd Bourini',\r\n      special: 'computer Engineer',\r\n      Interviewer: 'AhmAd M, Mosab A',\r\n      AppliedDate: ' 12-12-2021',\r\n      category: 'Applied',\r\n    },\r\n    {\r\n      id: '2',\r\n      name: 'ShBourini',\r\n      special: 'IT',\r\n      Interviewer: 'AhmAd M, Mosab A',\r\n      AppliedDate: ' 12-12-2021',\r\n      category: 'Applied',\r\n    },\r\n    {\r\n      id: '3',\r\n      name: 'Shahd',\r\n      special: 'UI/UX Developer',\r\n      Interviewer: 'AhmAd M, Mosab A',\r\n      AppliedDate: ' 06-06-2020',\r\n      category: 'Interview',\r\n    },\r\n    {\r\n      id: '4',\r\n      name: 'Shahd Bourini',\r\n      special: 'computer Engineer',\r\n      Interviewer: 'AhmAd M, Mosab A',\r\n      AppliedDate: ' 12-12-2021',\r\n      category: 'Phone',\r\n    },\r\n    {\r\n      id: '5',\r\n      name: 'Shahd Al-Bourini',\r\n      special: 'IT',\r\n      Interviewer: 'AhmAd M, Mosab A',\r\n      AppliedDate: ' 12-05-2021',\r\n      category: 'Hired',\r\n    },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    setResultTemp(tasks);\r\n  }, [resultTemp]);\r\n\r\n  const onDragStart = (ev, id) => {\r\n    ev.dataTransfer.setData('id', id);\r\n  };\r\n\r\n  const onDragOver = (ev) => {\r\n    ev.preventDefault();\r\n  };\r\n\r\n  const onDrop = (ev, cat) => {\r\n    let id = ev.dataTransfer.getData('id');\r\n\r\n    let tasksNew = tasks.filter((task) => {\r\n      if (task.id === id) {\r\n        task.category = cat;\r\n      }\r\n      return task;\r\n    });\r\n    setTasks(tasksNew);\r\n  };\r\n\r\n  const selectResult = (item) => {\r\n    setJob(item);\r\n  };\r\n\r\n  const applyFilter = () => {\r\n    const results = !job\r\n      ? resultTemp\r\n      : resultTemp.filter((item) =>\r\n          item.special.toLowerCase().includes(job.toLowerCase())\r\n        );\r\n\r\n    if (job === 'All') {\r\n      setTasks(resultTemp);\r\n    } else {\r\n      // setInput(value);\r\n      setTasks(results);\r\n    }\r\n  };\r\n\r\n  const resetFilter = () => {\r\n    setTasks(resultTemp);\r\n  };\r\n  return (\r\n    <>\r\n      <Row gutter={[0, 8]} style={{ paddingTop: `30px` }}>\r\n        <Col\r\n          xs={{ span: 7, offset: 1 }}\r\n          sm={{ span: 7, offset: 1 }}\r\n          md={{ span: 4, offset: 1 }}\r\n          lg={{ span: 4, offset: 1 }}\r\n        >\r\n          <DatePicker\r\n            placeholder=\"Show result from\"\r\n            className=\"JobBoard-input\"\r\n          />\r\n        </Col>\r\n\r\n        <Col\r\n          xs={{ span: 7, offset: 0 }}\r\n          sm={{ span: 7, offset: 0 }}\r\n          md={{ span: 4, offset: 0 }}\r\n          lg={{ span: 4, offset: 0 }}\r\n        >\r\n          <DatePicker placeholder=\"Show result to\" className=\"JobBoard-input\" />\r\n        </Col>\r\n\r\n        <Col\r\n          xs={{ span: 7, offset: 0 }}\r\n          sm={{ span: 7, offset: 0 }}\r\n          md={{ span: 4, offset: 0 }}\r\n          lg={{ span: 4, offset: 0 }}\r\n        >\r\n          <Select\r\n            style={{ width: `95%`, borderRadius: `6px` }}\r\n            className=\"JobBoard-input\"\r\n            placeholder=\"All Jobs\"\r\n            onChange={selectResult}\r\n            value={selected}\r\n          >\r\n            <Option value=\"All\">All</Option>\r\n            <Option value=\"UI/UX Developer\">UI/UX Developer</Option>\r\n            <Option value=\"Computer Engineer\">Computer Engineer</Option>\r\n            <Option value=\"IT\">IT</Option>\r\n          </Select>\r\n        </Col>\r\n\r\n        <Col\r\n          xs={{ span: 20, offset: 1 }}\r\n          sm={{ span: 11, offset: 1 }}\r\n          md={{ span: 9, offset: 0 }}\r\n          lg={{ span: 10, offset: 0 }}\r\n        >\r\n          <div className=\"jobBoard\">\r\n            <Button onClick={applyFilter}>Apply</Button>\r\n            <Button onClick={resetFilter}>Reset</Button>\r\n            <Button>Table View</Button>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <DragDrop\r\n        tasks={tasks}\r\n        onDragStart={onDragStart}\r\n        onDragOver={onDragOver}\r\n        onDrop={onDrop}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default JobBoard;\r\n"]},"metadata":{},"sourceType":"module"}