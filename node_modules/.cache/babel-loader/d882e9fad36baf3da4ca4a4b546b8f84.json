{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\nadrec\\\\src\\\\components\\\\job-boardCom\\\\JobBoardCom.js\";\nimport { Input, DatePicker, Button, Select, Col, Row } from 'antd';\nimport React, { useState, useEffect } from 'react';\nimport DragDrop from '../drag-and-drop/DragDrop';\nimport './style-jobBoard.css';\n\nfunction JobBoardCom(props) {\n  const {\n    Option\n  } = Select; // var results = '';\n  // const [job, setJob] = useState();\n  // const [StartDate, setStartDate] = useState();\n  // const [EndDate, setEndDate] = useState();\n  // const [resultTemp, setResultTemp] = useState([]);\n  // const [tasks, setTasks] = useState([\n  //   {\n  //     id: '1',\n  //     name: 'Shahd Bourini',\n  //     special: 'computer Engineer',\n  //     Interviewer: 'AhmAd M, Mosab A',\n  //     AppliedDate: '2021-12-13',\n  //     category: 'Applied',\n  //   },\n  //   {\n  //     id: '2',\n  //     name: 'ShBourini',\n  //     special: 'IT',\n  //     Interviewer: 'AhmAd M, Mosab A',\n  //     AppliedDate: '2021-12-12',\n  //     category: 'Applied',\n  //   },\n  //   {\n  //     id: '3',\n  //     name: 'Shahd',\n  //     special: 'UI/UX Developer',\n  //     Interviewer: 'AhmAd M, Mosab A',\n  //     AppliedDate: '2020-06-06',\n  //     category: 'Interview',\n  //   },\n  //   {\n  //     id: '4',\n  //     name: 'Shahd Bourini',\n  //     special: 'computer Engineer',\n  //     Interviewer: 'AhmAd M, Mosab A',\n  //     AppliedDate: '2021-03-07',\n  //     category: 'Phone',\n  //   },\n  //   {\n  //     id: '5',\n  //     name: 'Shahd Al-Bourini',\n  //     special: 'IT',\n  //     Interviewer: 'AhmAd M, Mosab A',\n  //     AppliedDate: '2021-12-11',\n  //     category: 'Hired',\n  //   },\n  // ]);\n  // useEffect(() => {\n  //   setResultTemp(tasks);\n  // }, [resultTemp]);\n  // const onDragStart = (ev, id) => {\n  //   ev.dataTransfer.setData('id', id);\n  // };\n  // const onDragOver = (ev) => {\n  //   ev.preventDefault();\n  // };\n  // const onDrop = (ev, cat) => {\n  //   let id = ev.dataTransfer.getData('id');\n  //   let tasksNew = tasks.filter((task) => {\n  //     if (task.id === id) {\n  //       task.category = cat;\n  //     }\n  //     return task;\n  //   });\n  //   setTasks(tasksNew);\n  // };\n  // const selectResult = (item) => {\n  //   setJob(item);\n  // };\n  // function onChangeStart(date, dateString) {\n  //   console.log(date, dateString);\n  //   setStartDate(dateString);\n  // }\n  // function onChangeEnd(date, dateString) {\n  //   setEndDate(dateString);\n  // }\n  // const applyFilter = () => {\n  //   if (!StartDate && !EndDate && !job) {\n  //     results = resultTemp;\n  //   } else if (!StartDate && !EndDate && job) {\n  //     results = resultTemp.filter((item) =>\n  //       item.special.toLowerCase().includes(job.toLowerCase())\n  //     );\n  //   } else if (!StartDate && EndDate && !job) {\n  //     results = resultTemp.filter((item) => item.AppliedDate <= EndDate);\n  //   } else if (StartDate && !EndDate && !job) {\n  //     results = resultTemp.filter((item) => item.AppliedDate >= StartDate);\n  //   } else if (StartDate && EndDate && !job) {\n  //     results = resultTemp.filter(\n  //       (item) => item.AppliedDate >= StartDate && item.AppliedDate <= EndDate\n  //     );\n  //   } else {\n  //     results = resultTemp.filter(\n  //       (item) =>\n  //         item.AppliedDate >= StartDate &&\n  //         item.AppliedDate <= EndDate &&\n  //         item.special.toLowerCase().includes(job.toLowerCase())\n  //     );\n  //   }\n  //   setTasks(results);\n  // };\n  // const resetFilter = () => {\n  //   setTasks(resultTemp);\n  //   setJob('');\n  //   setStartDate('');\n  //   setEndDate('');\n  // };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      gutter: [0, 8],\n      style: {\n        paddingTop: `30px`\n      },\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: {\n          span: 7,\n          offset: 1\n        },\n        sm: {\n          span: 7,\n          offset: 1\n        },\n        md: {\n          span: 4,\n          offset: 1\n        },\n        lg: {\n          span: 4,\n          offset: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(DatePicker, {\n          placeholder: \"Show result from\",\n          className: \"JobBoard-input\",\n          onChange: props.onChangeStart,\n          selected: props.StartDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: {\n          span: 7,\n          offset: 0\n        },\n        sm: {\n          span: 7,\n          offset: 0\n        },\n        md: {\n          span: 4,\n          offset: 0\n        },\n        lg: {\n          span: 4,\n          offset: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(DatePicker, {\n          placeholder: \"Show result to\",\n          className: \"JobBoard-input\",\n          onChange: props.onChangeEnd\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: {\n          span: 7,\n          offset: 0\n        },\n        sm: {\n          span: 7,\n          offset: 0\n        },\n        md: {\n          span: 4,\n          offset: 0\n        },\n        lg: {\n          span: 4,\n          offset: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          style: {\n            width: `95%`,\n            borderRadius: `6px`\n          },\n          className: \"JobBoard-input\",\n          placeholder: \"All Jobs\",\n          onChange: props.selectResult,\n          value: props.job,\n          children: [/*#__PURE__*/_jsxDEV(Option, {\n            value: \"UI/UX Developer\",\n            children: \"UI/UX Developer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"Computer Engineer\",\n            children: \"Computer Engineer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"IT\",\n            children: \"IT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: {\n          span: 20,\n          offset: 1\n        },\n        sm: {\n          span: 11,\n          offset: 1\n        },\n        md: {\n          span: 9,\n          offset: 0\n        },\n        lg: {\n          span: 10,\n          offset: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"jobBoard\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: props.applyFilter,\n            children: \"Apply\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: props.resetFilter,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            children: \"Table View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_c = JobBoardCom;\nexport default JobBoardCom;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobBoardCom\");","map":{"version":3,"sources":["F:/nadrec/src/components/job-boardCom/JobBoardCom.js"],"names":["Input","DatePicker","Button","Select","Col","Row","React","useState","useEffect","DragDrop","JobBoardCom","props","Option","paddingTop","span","offset","onChangeStart","StartDate","onChangeEnd","width","borderRadius","selectResult","job","applyFilter","resetFilter"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,UAAhB,EAA4BC,MAA5B,EAAoCC,MAApC,EAA4CC,GAA5C,EAAiDC,GAAjD,QAA4D,MAA5D;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAO,sBAAP;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAAaT,MAAnB,CAD0B,CAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,sBACE;AAAA,2BACE,QAAC,GAAD;AAAK,MAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CAAb;AAAqB,MAAA,KAAK,EAAE;AAAEU,QAAAA,UAAU,EAAG;AAAf,OAA5B;AAAA,8BACE,QAAC,GAAD;AACE,QAAA,EAAE,EAAE;AAAEC,UAAAA,IAAI,EAAE,CAAR;AAAWC,UAAAA,MAAM,EAAE;AAAnB,SADN;AAEE,QAAA,EAAE,EAAE;AAAED,UAAAA,IAAI,EAAE,CAAR;AAAWC,UAAAA,MAAM,EAAE;AAAnB,SAFN;AAGE,QAAA,EAAE,EAAE;AAAED,UAAAA,IAAI,EAAE,CAAR;AAAWC,UAAAA,MAAM,EAAE;AAAnB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","sourcesContent":["import { Input, DatePicker, Button, Select, Col, Row } from 'antd';\r\nimport React, { useState, useEffect } from 'react';\r\nimport DragDrop from '../drag-and-drop/DragDrop';\r\nimport './style-jobBoard.css';\r\n\r\nfunction JobBoardCom(props) {\r\n  const { Option } = Select;\r\n  // var results = '';\r\n  // const [job, setJob] = useState();\r\n  // const [StartDate, setStartDate] = useState();\r\n  // const [EndDate, setEndDate] = useState();\r\n  // const [resultTemp, setResultTemp] = useState([]);\r\n  // const [tasks, setTasks] = useState([\r\n  //   {\r\n  //     id: '1',\r\n  //     name: 'Shahd Bourini',\r\n  //     special: 'computer Engineer',\r\n  //     Interviewer: 'AhmAd M, Mosab A',\r\n  //     AppliedDate: '2021-12-13',\r\n  //     category: 'Applied',\r\n  //   },\r\n  //   {\r\n  //     id: '2',\r\n  //     name: 'ShBourini',\r\n  //     special: 'IT',\r\n  //     Interviewer: 'AhmAd M, Mosab A',\r\n  //     AppliedDate: '2021-12-12',\r\n  //     category: 'Applied',\r\n  //   },\r\n  //   {\r\n  //     id: '3',\r\n  //     name: 'Shahd',\r\n  //     special: 'UI/UX Developer',\r\n  //     Interviewer: 'AhmAd M, Mosab A',\r\n  //     AppliedDate: '2020-06-06',\r\n  //     category: 'Interview',\r\n  //   },\r\n  //   {\r\n  //     id: '4',\r\n  //     name: 'Shahd Bourini',\r\n  //     special: 'computer Engineer',\r\n  //     Interviewer: 'AhmAd M, Mosab A',\r\n  //     AppliedDate: '2021-03-07',\r\n  //     category: 'Phone',\r\n  //   },\r\n  //   {\r\n  //     id: '5',\r\n  //     name: 'Shahd Al-Bourini',\r\n  //     special: 'IT',\r\n  //     Interviewer: 'AhmAd M, Mosab A',\r\n  //     AppliedDate: '2021-12-11',\r\n  //     category: 'Hired',\r\n  //   },\r\n  // ]);\r\n\r\n  // useEffect(() => {\r\n  //   setResultTemp(tasks);\r\n  // }, [resultTemp]);\r\n\r\n  // const onDragStart = (ev, id) => {\r\n  //   ev.dataTransfer.setData('id', id);\r\n  // };\r\n\r\n  // const onDragOver = (ev) => {\r\n  //   ev.preventDefault();\r\n  // };\r\n\r\n  // const onDrop = (ev, cat) => {\r\n  //   let id = ev.dataTransfer.getData('id');\r\n\r\n  //   let tasksNew = tasks.filter((task) => {\r\n  //     if (task.id === id) {\r\n  //       task.category = cat;\r\n  //     }\r\n  //     return task;\r\n  //   });\r\n  //   setTasks(tasksNew);\r\n  // };\r\n\r\n  // const selectResult = (item) => {\r\n  //   setJob(item);\r\n  // };\r\n\r\n  // function onChangeStart(date, dateString) {\r\n  //   console.log(date, dateString);\r\n  //   setStartDate(dateString);\r\n  // }\r\n\r\n  // function onChangeEnd(date, dateString) {\r\n  //   setEndDate(dateString);\r\n  // }\r\n\r\n  // const applyFilter = () => {\r\n  //   if (!StartDate && !EndDate && !job) {\r\n  //     results = resultTemp;\r\n  //   } else if (!StartDate && !EndDate && job) {\r\n  //     results = resultTemp.filter((item) =>\r\n  //       item.special.toLowerCase().includes(job.toLowerCase())\r\n  //     );\r\n  //   } else if (!StartDate && EndDate && !job) {\r\n  //     results = resultTemp.filter((item) => item.AppliedDate <= EndDate);\r\n  //   } else if (StartDate && !EndDate && !job) {\r\n  //     results = resultTemp.filter((item) => item.AppliedDate >= StartDate);\r\n  //   } else if (StartDate && EndDate && !job) {\r\n  //     results = resultTemp.filter(\r\n  //       (item) => item.AppliedDate >= StartDate && item.AppliedDate <= EndDate\r\n  //     );\r\n  //   } else {\r\n  //     results = resultTemp.filter(\r\n  //       (item) =>\r\n  //         item.AppliedDate >= StartDate &&\r\n  //         item.AppliedDate <= EndDate &&\r\n  //         item.special.toLowerCase().includes(job.toLowerCase())\r\n  //     );\r\n  //   }\r\n  //   setTasks(results);\r\n  // };\r\n\r\n  // const resetFilter = () => {\r\n  //   setTasks(resultTemp);\r\n  //   setJob('');\r\n  //   setStartDate('');\r\n  //   setEndDate('');\r\n  // };\r\n  return (\r\n    <>\r\n      <Row gutter={[0, 8]} style={{ paddingTop: `30px` }}>\r\n        <Col\r\n          xs={{ span: 7, offset: 1 }}\r\n          sm={{ span: 7, offset: 1 }}\r\n          md={{ span: 4, offset: 1 }}\r\n          lg={{ span: 4, offset: 1 }}\r\n        >\r\n          <DatePicker\r\n            placeholder=\"Show result from\"\r\n            className=\"JobBoard-input\"\r\n            onChange={props.onChangeStart}\r\n            selected={props.StartDate}\r\n          />\r\n        </Col>\r\n\r\n        <Col\r\n          xs={{ span: 7, offset: 0 }}\r\n          sm={{ span: 7, offset: 0 }}\r\n          md={{ span: 4, offset: 0 }}\r\n          lg={{ span: 4, offset: 0 }}\r\n        >\r\n          <DatePicker\r\n            placeholder=\"Show result to\"\r\n            className=\"JobBoard-input\"\r\n            onChange={props.onChangeEnd}\r\n          />\r\n        </Col>\r\n\r\n        <Col\r\n          xs={{ span: 7, offset: 0 }}\r\n          sm={{ span: 7, offset: 0 }}\r\n          md={{ span: 4, offset: 0 }}\r\n          lg={{ span: 4, offset: 0 }}\r\n        >\r\n          <Select\r\n            style={{ width: `95%`, borderRadius: `6px` }}\r\n            className=\"JobBoard-input\"\r\n            placeholder=\"All Jobs\"\r\n            onChange={props.selectResult}\r\n            value={props.job}\r\n          >\r\n            {/* <Option value=\"All\">All</Option> */}\r\n            <Option value=\"UI/UX Developer\">UI/UX Developer</Option>\r\n            <Option value=\"Computer Engineer\">Computer Engineer</Option>\r\n            <Option value=\"IT\">IT</Option>\r\n          </Select>\r\n        </Col>\r\n\r\n        <Col\r\n          xs={{ span: 20, offset: 1 }}\r\n          sm={{ span: 11, offset: 1 }}\r\n          md={{ span: 9, offset: 0 }}\r\n          lg={{ span: 10, offset: 0 }}\r\n        >\r\n          <div className=\"jobBoard\">\r\n            <Button onClick={props.applyFilter}>Apply</Button>\r\n            <Button onClick={props.resetFilter}>Reset</Button>\r\n            <Button>Table View</Button>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default JobBoardCom;\r\n"]},"metadata":{},"sourceType":"module"}