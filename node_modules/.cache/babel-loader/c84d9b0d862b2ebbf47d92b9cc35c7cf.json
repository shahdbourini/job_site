{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\nadrec\\\\src\\\\pages\\\\JobBoard.js\",\n    _s = $RefreshSig$();\n\nimport JobBoardCom from '../components/job-boardCom/JobBoardCom';\nimport React, { useState, useEffect } from 'react';\nimport DragDrop from '../components/drag-and-drop/DragDrop';\n\nfunction JobBoard(props) {\n  _s();\n\n  var results = '';\n  const [job, setJob] = useState();\n  const [StartDate, setStartDate] = useState();\n  const [EndDate, setEndDate] = useState();\n  const [resultTemp, setResultTemp] = useState([]);\n  const [tasks, setTasks] = useState([{\n    id: '1',\n    name: 'Shahd Bourini',\n    special: 'computer Engineer',\n    Interviewer: 'AhmAd M, Mosab A',\n    AppliedDate: '2021-12-13',\n    category: 'Applied'\n  }, {\n    id: '2',\n    name: 'ShBourini',\n    special: 'IT',\n    Interviewer: 'AhmAd M, Mosab A',\n    AppliedDate: '2021-12-12',\n    category: 'Applied'\n  }, {\n    id: '3',\n    name: 'Shahd',\n    special: 'UI/UX Developer',\n    Interviewer: 'AhmAd M, Mosab A',\n    AppliedDate: '2020-06-06',\n    category: 'Interview'\n  }, {\n    id: '4',\n    name: 'Shahd Bourini',\n    special: 'computer Engineer',\n    Interviewer: 'AhmAd M, Mosab A',\n    AppliedDate: '2021-03-07',\n    category: 'Phone'\n  }, {\n    id: '5',\n    name: 'Shahd Al-Bourini',\n    special: 'IT',\n    Interviewer: 'AhmAd M, Mosab A',\n    AppliedDate: '2021-12-11',\n    category: 'Hired'\n  }]);\n  useEffect(() => {\n    setResultTemp(tasks);\n  }, [resultTemp]);\n\n  const onDragStart = (ev, id) => {\n    ev.dataTransfer.setData('id', id);\n  };\n\n  const onDragOver = ev => {\n    ev.preventDefault();\n  };\n\n  const onDrop = (ev, cat) => {\n    let id = ev.dataTransfer.getData('id');\n    let tasksNew = tasks.filter(task => {\n      if (task.id === id) {\n        task.category = cat;\n      }\n\n      return task;\n    });\n    setTasks(tasksNew);\n  };\n\n  const selectResult = item => {\n    setJob(item);\n  };\n\n  function onChangeStart(date, dateString) {\n    console.log(date, dateString);\n    setStartDate(dateString);\n  }\n\n  function onChangeEnd(date, dateString) {\n    setEndDate(dateString);\n  }\n\n  const applyFilter = () => {\n    if (!StartDate && !EndDate && !job) {\n      results = resultTemp;\n    } else if (!StartDate && !EndDate && job) {\n      results = resultTemp.filter(item => item.special.toLowerCase().includes(job.toLowerCase()));\n    } else if (!StartDate && EndDate && !job) {\n      results = resultTemp.filter(item => item.AppliedDate <= EndDate);\n    } else if (StartDate && !EndDate && !job) {\n      results = resultTemp.filter(item => item.AppliedDate >= StartDate);\n    } else if (StartDate && EndDate && !job) {\n      results = resultTemp.filter(item => item.AppliedDate >= StartDate && item.AppliedDate <= EndDate);\n    } else {\n      results = resultTemp.filter(item => item.AppliedDate >= StartDate && item.AppliedDate <= EndDate && item.special.toLowerCase().includes(job.toLowerCase()));\n    }\n\n    setTasks(results);\n  };\n\n  const resetFilter = () => {\n    setTasks(resultTemp);\n    setJob('');\n    setStartDate('');\n    setEndDate('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(JobBoardCom, {\n      onChangeStar: onChangeStart,\n      StartDate: StartDate,\n      onChangeEnd: onChangeEnd,\n      selectResult: selectResult,\n      job: job\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(JobBoard, \"H8Q6LP52Iha5MweQuzh3OHKJJWk=\");\n\n_c = JobBoard;\nexport default JobBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobBoard\");","map":{"version":3,"sources":["F:/nadrec/src/pages/JobBoard.js"],"names":["JobBoardCom","React","useState","useEffect","DragDrop","JobBoard","props","results","job","setJob","StartDate","setStartDate","EndDate","setEndDate","resultTemp","setResultTemp","tasks","setTasks","id","name","special","Interviewer","AppliedDate","category","onDragStart","ev","dataTransfer","setData","onDragOver","preventDefault","onDrop","cat","getData","tasksNew","filter","task","selectResult","item","onChangeStart","date","dateString","console","log","onChangeEnd","applyFilter","toLowerCase","includes","resetFilter"],"mappings":"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","sourcesContent":["import JobBoardCom from '../components/job-boardCom/JobBoardCom';\r\nimport React, { useState, useEffect } from 'react';\r\nimport DragDrop from '../components/drag-and-drop/DragDrop';\r\n\r\nfunction JobBoard(props) {\r\n  var results = '';\r\n  const [job, setJob] = useState();\r\n  const [StartDate, setStartDate] = useState();\r\n  const [EndDate, setEndDate] = useState();\r\n  const [resultTemp, setResultTemp] = useState([]);\r\n  const [tasks, setTasks] = useState([\r\n    {\r\n      id: '1',\r\n      name: 'Shahd Bourini',\r\n      special: 'computer Engineer',\r\n      Interviewer: 'AhmAd M, Mosab A',\r\n      AppliedDate: '2021-12-13',\r\n      category: 'Applied',\r\n    },\r\n    {\r\n      id: '2',\r\n      name: 'ShBourini',\r\n      special: 'IT',\r\n      Interviewer: 'AhmAd M, Mosab A',\r\n      AppliedDate: '2021-12-12',\r\n      category: 'Applied',\r\n    },\r\n    {\r\n      id: '3',\r\n      name: 'Shahd',\r\n      special: 'UI/UX Developer',\r\n      Interviewer: 'AhmAd M, Mosab A',\r\n      AppliedDate: '2020-06-06',\r\n      category: 'Interview',\r\n    },\r\n    {\r\n      id: '4',\r\n      name: 'Shahd Bourini',\r\n      special: 'computer Engineer',\r\n      Interviewer: 'AhmAd M, Mosab A',\r\n      AppliedDate: '2021-03-07',\r\n      category: 'Phone',\r\n    },\r\n    {\r\n      id: '5',\r\n      name: 'Shahd Al-Bourini',\r\n      special: 'IT',\r\n      Interviewer: 'AhmAd M, Mosab A',\r\n      AppliedDate: '2021-12-11',\r\n      category: 'Hired',\r\n    },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    setResultTemp(tasks);\r\n  }, [resultTemp]);\r\n\r\n  const onDragStart = (ev, id) => {\r\n    ev.dataTransfer.setData('id', id);\r\n  };\r\n\r\n  const onDragOver = (ev) => {\r\n    ev.preventDefault();\r\n  };\r\n\r\n  const onDrop = (ev, cat) => {\r\n    let id = ev.dataTransfer.getData('id');\r\n\r\n    let tasksNew = tasks.filter((task) => {\r\n      if (task.id === id) {\r\n        task.category = cat;\r\n      }\r\n      return task;\r\n    });\r\n    setTasks(tasksNew);\r\n  };\r\n\r\n  const selectResult = (item) => {\r\n    setJob(item);\r\n  };\r\n\r\n  function onChangeStart(date, dateString) {\r\n    console.log(date, dateString);\r\n    setStartDate(dateString);\r\n  }\r\n\r\n  function onChangeEnd(date, dateString) {\r\n    setEndDate(dateString);\r\n  }\r\n\r\n  const applyFilter = () => {\r\n    if (!StartDate && !EndDate && !job) {\r\n      results = resultTemp;\r\n    } else if (!StartDate && !EndDate && job) {\r\n      results = resultTemp.filter((item) =>\r\n        item.special.toLowerCase().includes(job.toLowerCase())\r\n      );\r\n    } else if (!StartDate && EndDate && !job) {\r\n      results = resultTemp.filter((item) => item.AppliedDate <= EndDate);\r\n    } else if (StartDate && !EndDate && !job) {\r\n      results = resultTemp.filter((item) => item.AppliedDate >= StartDate);\r\n    } else if (StartDate && EndDate && !job) {\r\n      results = resultTemp.filter(\r\n        (item) => item.AppliedDate >= StartDate && item.AppliedDate <= EndDate\r\n      );\r\n    } else {\r\n      results = resultTemp.filter(\r\n        (item) =>\r\n          item.AppliedDate >= StartDate &&\r\n          item.AppliedDate <= EndDate &&\r\n          item.special.toLowerCase().includes(job.toLowerCase())\r\n      );\r\n    }\r\n    setTasks(results);\r\n  };\r\n\r\n  const resetFilter = () => {\r\n    setTasks(resultTemp);\r\n    setJob('');\r\n    setStartDate('');\r\n    setEndDate('');\r\n  };\r\n  return (\r\n    <>\r\n      <JobBoardCom\r\n        onChangeStar={onChangeStart}\r\n        StartDate={StartDate}\r\n        onChangeEnd={onChangeEnd}\r\n        selectResult={selectResult}\r\n        job={job}\r\n      />\r\n      {/* <DragDrop /> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default JobBoard;\r\n"]},"metadata":{},"sourceType":"module"}