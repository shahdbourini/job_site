{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\nadrec\\\\src\\\\components\\\\job-board\\\\DragDrop.js\";\nimport React, { Component } from 'react';\nexport default class DragDrop extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tasks: [{\n        name: 'Learn Angular',\n        category: 'wip',\n        bgcolor: 'yellow'\n      }, {\n        name: 'React',\n        category: 'wip',\n        bgcolor: 'pink'\n      }, {\n        name: 'Vue',\n        category: 'complete',\n        bgcolor: 'skyblue'\n      }],\n      count1: 2,\n      count2: 1\n    };\n\n    this.onDragStart = (ev, id) => {\n      console.log('dragstart:', id);\n      ev.dataTransfer.setData('id', id);\n    };\n\n    this.onDragOver = ev => {\n      ev.preventDefault();\n    };\n\n    this.onDrop = (ev, cat) => {\n      let id = ev.dataTransfer.getData('id');\n      let tasks = this.state.tasks.filter(task => {\n        if (task.name === id) {\n          task.category = cat;\n        }\n\n        return task;\n      });\n      this.setState({ ...this.state,\n        tasks\n      });\n    };\n  }\n\n  render() {\n    var taskss = {\n      wip: [],\n      complete: []\n    };\n    this.state.tasks.forEach(t => {\n      taskss[t.category].push( /*#__PURE__*/_jsxDEV(\"div\", {\n        onDragStart: e => this.onDragStart(e, t.name),\n        draggable: true,\n        className: \"draggable\",\n        style: {\n          backgroundColor: t.bgcolor\n        },\n        children: t.name\n      }, t.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this));\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-drag\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"header\",\n        children: \"DRAG & DROP DEMO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wip\",\n        onDragOver: e => this.onDragOver(e),\n        onDrop: e => {\n          this.onDrop(e, 'wip', this.state);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"task-header\",\n          children: \"WIP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), taskss.wip]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"droppable\",\n        onDragOver: e => this.onDragOver(e),\n        onDrop: e => this.onDrop(e, 'complete'),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"task-header\",\n          children: \"COMPLETED\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), taskss.complete]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["F:/nadrec/src/components/job-board/DragDrop.js"],"names":["React","Component","DragDrop","state","tasks","name","category","bgcolor","count1","count2","onDragStart","ev","id","console","log","dataTransfer","setData","onDragOver","preventDefault","onDrop","cat","getData","filter","task","setState","render","taskss","wip","complete","forEach","t","push","e","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class DragDrop extends Component {\r\n  state = {\r\n    tasks: [\r\n      { name: 'Learn Angular', category: 'wip', bgcolor: 'yellow' },\r\n      { name: 'React', category: 'wip', bgcolor: 'pink' },\r\n      { name: 'Vue', category: 'complete', bgcolor: 'skyblue' },\r\n    ],\r\n    count1: 2,\r\n    count2: 1,\r\n  };\r\n\r\n  onDragStart = (ev, id) => {\r\n    console.log('dragstart:', id);\r\n    ev.dataTransfer.setData('id', id);\r\n  };\r\n\r\n  onDragOver = (ev) => {\r\n    ev.preventDefault();\r\n  };\r\n\r\n  onDrop = (ev, cat) => {\r\n    let id = ev.dataTransfer.getData('id');\r\n\r\n    let tasks = this.state.tasks.filter((task) => {\r\n      if (task.name === id) {\r\n        task.category = cat;\r\n      }\r\n      return task;\r\n    });\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      tasks,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    var taskss = {\r\n      wip: [],\r\n      complete: [],\r\n    };\r\n\r\n    this.state.tasks.forEach((t) => {\r\n      taskss[t.category].push(\r\n        <div\r\n          key={t.name}\r\n          onDragStart={(e) => this.onDragStart(e, t.name)}\r\n          draggable\r\n          className=\"draggable\"\r\n          style={{ backgroundColor: t.bgcolor }}\r\n        >\r\n          {t.name}\r\n        </div>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"container-drag\">\r\n        <h2 className=\"header\">DRAG & DROP DEMO</h2>\r\n        <div\r\n          className=\"wip\"\r\n          onDragOver={(e) => this.onDragOver(e)}\r\n          onDrop={(e) => {\r\n            this.onDrop(e, 'wip',this.state);\r\n          }}\r\n        >\r\n          <span className=\"task-header\">WIP</span>\r\n          {taskss.wip}\r\n        </div>\r\n        <div\r\n          className=\"droppable\"\r\n          onDragOver={(e) => this.onDragOver(e)}\r\n          onDrop={(e) => this.onDrop(e, 'complete')}\r\n        >\r\n          <span className=\"task-header\">COMPLETED</span>\r\n          {taskss.complete}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}