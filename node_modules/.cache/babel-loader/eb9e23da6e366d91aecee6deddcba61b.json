{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\nadrec\\\\src\\\\components\\\\table\\\\EditableTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport { Table, Input, Popconfirm, Space, Select } from 'antd';\nimport './style-table.css';\nimport edit from \"../../images/edit.svg\";\nimport deletee from \"../../images/delete.svg\";\nimport { Link } from 'react-router-dom';\nimport Modall from '../Modal/Modall';\n\nfunction EditableTable(props) {\n  _s();\n\n  console.log(props.ModalVisible);\n  useEffect(() => {// setResult(dataSource);\n  }, []);\n  const {\n    jobTitleT,\n    jobTitle,\n    jobLocation,\n    jobLocationT,\n    skills,\n    skillsT,\n    CategoriesNameT,\n    CategoriesName,\n    startDate,\n    endDate,\n    startDateT,\n    endDateT,\n    statusT,\n    statuss,\n    numT,\n    num\n  } = props;\n  const columns = [{\n    title: num,\n    dataIndex: 'id',\n    width: '5%' // editable: true,\n\n  }, {\n    title: jobTitleT,\n    dataIndex: jobTitle\n  }, {\n    title: skillsT,\n    dataIndex: skills\n  }, {\n    title: CategoriesNameT,\n    dataIndex: CategoriesName\n  }, {\n    title: jobLocationT,\n    dataIndex: jobLocation\n  }, {\n    title: startDateT,\n    dataIndex: startDate\n  }, {\n    title: endDateT,\n    dataIndex: endDate\n  }, {\n    title: statusT,\n    dataIndex: statuss\n  } // {\n  //   title: '',\n  //   dataIndex: 'operation',\n  //   width: '20%',\n  //   render: (_, record) => (\n  //     <Space size=\"large\" style={{ cursor: 'pointer', paddingLeft: `63px` }}>\n  //       <img src={edit} alt=\"edit\" />\n  //       <img src={deletee} alt=\"delete\" />\n  //       <Popconfirm\n  //         title=\"Sure to delete?\"\n  //         onConfirm={() => props.handleDelete(record.key)}\n  //       ></Popconfirm>\n  //     </Space>\n  //   ),\n  // },\n  ];\n  const columnss = columns.map(col => {\n    return { ...col,\n      onCell: record => ({\n        record,\n        dataIndex: col.dataIndex,\n        title: col.title\n      })\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modall, {\n      visible: props.ModalVisible,\n      onOk: props.handleOk,\n      onCancel: props.handleCancel,\n      onChangeStatus: props.onChangeStatus,\n      onChangeLocation: props.onChangeLocation,\n      onChangeStart: props.onChangeStart,\n      onChangeEnd: props.onChangeEnd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      rowClassName: () => 'editable-row',\n      dataSource: props.result,\n      columns: columnss\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(EditableTable, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = EditableTable;\nexport default EditableTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditableTable\");","map":{"version":3,"sources":["F:/nadrec/src/components/table/EditableTable.js"],"names":["React","useContext","useState","useEffect","useRef","ReactDOM","Table","Input","Popconfirm","Space","Select","Link","Modall","EditableTable","props","console","log","ModalVisible","jobTitleT","jobTitle","jobLocation","jobLocationT","skills","skillsT","CategoriesNameT","CategoriesName","startDate","endDate","startDateT","endDateT","statusT","statuss","numT","num","columns","title","dataIndex","width","columnss","map","col","onCell","record","handleOk","handleCancel","onChangeStatus","onChangeLocation","onChangeStart","onChangeEnd","result"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect, useRef } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport { Table, Input, Popconfirm, Space, Select } from 'antd';\r\nimport './style-table.css';\r\nimport edit from '../../images/edit.svg';\r\nimport deletee from '../../images/delete.svg';\r\nimport { Link } from 'react-router-dom';\r\nimport Modall from '../Modal/Modall';\r\n\r\nfunction EditableTable(props) {\r\n  console.log(props.ModalVisible);\r\n  useEffect(() => {\r\n    // setResult(dataSource);\r\n  }, []);\r\n\r\n  const {\r\n    jobTitleT,\r\n    jobTitle,\r\n    jobLocation,\r\n    jobLocationT,\r\n    skills,\r\n    skillsT,\r\n    CategoriesNameT,\r\n    CategoriesName,\r\n    startDate,\r\n    endDate,\r\n    startDateT,\r\n    endDateT,\r\n    statusT,\r\n    statuss,\r\n    numT,\r\n    num\r\n  } = props;\r\n\r\n  const columns = [\r\n    {\r\n      title: num,\r\n      dataIndex: 'id',\r\n      width: '5%',\r\n      // editable: true,\r\n    },\r\n    {\r\n      title: jobTitleT,\r\n      dataIndex: jobTitle,\r\n    },\r\n    {\r\n      title: skillsT,\r\n      dataIndex: skills,\r\n    },\r\n    {\r\n      title: CategoriesNameT,\r\n      dataIndex: CategoriesName,\r\n    },\r\n    {\r\n      title: jobLocationT,\r\n      dataIndex: jobLocation,\r\n    },\r\n    {\r\n      title: startDateT,\r\n      dataIndex: startDate,\r\n    },\r\n    {\r\n      title: endDateT,\r\n      dataIndex: endDate,\r\n    },\r\n    {\r\n      title: statusT,\r\n      dataIndex: statuss,\r\n    },\r\n    // {\r\n    //   title: '',\r\n    //   dataIndex: 'operation',\r\n    //   width: '20%',\r\n    //   render: (_, record) => (\r\n    //     <Space size=\"large\" style={{ cursor: 'pointer', paddingLeft: `63px` }}>\r\n    //       <img src={edit} alt=\"edit\" />\r\n    //       <img src={deletee} alt=\"delete\" />\r\n    //       <Popconfirm\r\n    //         title=\"Sure to delete?\"\r\n    //         onConfirm={() => props.handleDelete(record.key)}\r\n    //       ></Popconfirm>\r\n    //     </Space>\r\n    //   ),\r\n    // },\r\n  ];\r\n\r\n  const columnss = columns.map((col) => {\r\n    return {\r\n      ...col,\r\n      onCell: (record) => ({\r\n        record,\r\n        dataIndex: col.dataIndex,\r\n        title: col.title,\r\n      }),\r\n    };\r\n  });\r\n  return (\r\n    <>\r\n      <Modall\r\n        visible={props.ModalVisible}\r\n        onOk={props.handleOk}\r\n        onCancel={props.handleCancel}\r\n        onChangeStatus={props.onChangeStatus}\r\n        onChangeLocation={props.onChangeLocation}\r\n        onChangeStart={props.onChangeStart}\r\n        onChangeEnd={props.onChangeEnd}\r\n      />\r\n\r\n      <Table\r\n        rowClassName={() => 'editable-row'}\r\n        dataSource={props.result}\r\n        columns={columnss}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EditableTable;\r\n"]},"metadata":{},"sourceType":"module"}