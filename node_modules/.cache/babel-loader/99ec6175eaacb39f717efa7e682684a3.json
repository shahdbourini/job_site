{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\nadrec\\\\src\\\\components\\\\tables\\\\EditableTable.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport { Table, Input, Button, Popconfirm, Form, Space, Select } from 'antd';\nimport './style.css';\nimport edit from \"../../images/edit.svg\";\nimport deletee from \"../../images/delete.svg\";\nconst EditableContext = /*#__PURE__*/React.createContext(null);\n\nconst EditableRow = ({\n  index,\n  ...props\n}) => {\n  _s();\n\n  const [form] = Form.useForm();\n  return /*#__PURE__*/_jsxDEV(Form, {\n    form: form,\n    component: false,\n    children: /*#__PURE__*/_jsxDEV(EditableContext.Provider, {\n      value: form,\n      children: /*#__PURE__*/_jsxDEV(\"tr\", { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditableRow, \"rI7DrJIrFu7YmlGWYiMFTzs8jF0=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = EditableRow;\nconst {\n  Option\n} = Select;\n\nconst EditableCell = ({\n  title,\n  editable,\n  children,\n  dataIndex,\n  record,\n  handleSave,\n  ...restProps\n}) => {\n  _s2();\n\n  const [editing, setEditing] = useState(false);\n  const inputRef = useRef(null);\n  const form = useContext(EditableContext);\n  useEffect(() => {\n    if (editing) {\n      inputRef.current.focus();\n    }\n  }, [editing]);\n\n  const toggleEdit = () => {\n    setEditing(!editing);\n    form.setFieldsValue({\n      [dataIndex]: record[dataIndex]\n    });\n  };\n\n  const save = async () => {\n    try {\n      const values = await form.validateFields();\n      toggleEdit();\n      handleSave({ ...record,\n        ...values\n      });\n    } catch (errInfo) {\n      console.log('Save failed:', errInfo);\n    }\n  };\n\n  let childNode = children;\n\n  if (editable) {\n    childNode = editing ? /*#__PURE__*/_jsxDEV(Form.Item, {\n      style: {\n        margin: 0\n      },\n      name: dataIndex,\n      rules: [{\n        required: true,\n        message: `${title} is required.`\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        ref: inputRef,\n        onPressEnter: save,\n        onBlur: save\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editable-cell-value-wrap\",\n      style: {\n        paddingRight: 24\n      },\n      onClick: toggleEdit,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"td\", { ...restProps,\n    children: childNode\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 10\n  }, this);\n};\n\n_s2(EditableCell, \"IMw7TsWhFd8T/FybyizRtPpww8A=\");\n\n_c2 = EditableCell;\n\nfunction onChange(pagination, filters, sorter, extra) {\n  console.log('params', pagination, filters, sorter, extra);\n}\n\nconst result = !this.input ? this.dataSource : this.dataSource.filter(item => item.location.includes(this.input));\n\nclass EditableTable extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeS = value => {\n      // console.log(`selected ${value}`);\n      this.setState({\n        input: value\n      });\n      const dataSource = [...this.state.dataSource]; // this.setState({\n      //   dataSource: dataSource.filter((item) => item.location === value),\n      // });\n\n      const result = !value ? dataSource : dataSource.filter(item => item.location.includes(value));\n      console.log(result);\n    };\n\n    this.handleDelete = key => {\n      const dataSource = [...this.state.dataSource];\n      this.setState({\n        dataSource: dataSource.filter(item => item.key !== key)\n      });\n    };\n\n    this.handleAdd = () => {\n      const {\n        count,\n        dataSource\n      } = this.state;\n      const newData = {\n        key: count,\n        id: `${count}`,\n        title: '32',\n        location: `London, Park Lane no. ${count}`,\n        Sdate: '5-10',\n        Edate: '9-10',\n        status: 'yes'\n      };\n      this.setState({\n        dataSource: [...dataSource, newData],\n        count: count + 1\n      });\n    };\n\n    this.handleSave = row => {\n      const newData = [...this.state.dataSource];\n      const index = newData.findIndex(item => row.key === item.key);\n      const item = newData[index];\n      newData.splice(index, 1, { ...item,\n        ...row\n      });\n      this.setState({\n        dataSource: newData\n      });\n    };\n\n    this.columns = [{\n      title: '#',\n      dataIndex: 'id',\n      width: '5%' // editable: true,\n\n    }, {\n      title: 'JOB TITLE',\n      dataIndex: 'title'\n    }, {\n      title: 'JOB LOCATION',\n      dataIndex: 'location',\n      filters: [{\n        text: 'London',\n        value: 'London'\n      }, {\n        text: 'New York',\n        value: 'New York'\n      }],\n      filterMultiple: false,\n      // filterDropdownVisible: true,\n      onFilter: (value, record) => record.location.indexOf(value) === 0,\n      sorter: (a, b) => a.location.length - b.location.length,\n      sortDirections: ['descend', 'ascend']\n    }, {\n      title: 'START DATE',\n      dataIndex: 'Sdate'\n    }, {\n      title: 'END DATE',\n      dataIndex: 'Edate'\n    }, {\n      title: 'STATUS',\n      dataIndex: 'status'\n    }, {\n      title: '',\n      dataIndex: 'operation',\n      width: '20%',\n      render: (_, record) => /*#__PURE__*/_jsxDEV(Space, {\n        size: \"middle\",\n        style: {\n          cursor: 'pointer'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: edit,\n          alt: \"edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Popconfirm, {\n          title: \"Sure to delete?\",\n          onConfirm: () => this.handleDelete(record.key),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: deletee,\n            alt: \"delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this)\n    }];\n    this.state = {\n      dataSource: [{\n        key: '0',\n        id: '0',\n        title: '32',\n        location: 'London',\n        Sdate: '5-10',\n        Edate: '9-10',\n        status: 'yes'\n      }, {\n        key: '1',\n        id: ' 1',\n        title: '32',\n        location: 'New York',\n        Sdate: '5-10',\n        Edate: '9-10',\n        status: 'yes'\n      }],\n      count: 2,\n      input: ' '\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    const {\n      dataSource\n    } = this.state;\n    const result = !this.input ? this.dataSource : this.dataSource.filter(item => item.location.toLowerCase().includes(this.input.toLocaleLowerCase()));\n    const components = {\n      body: {\n        row: EditableRow,\n        cell: EditableCell\n      }\n    };\n    const columns = this.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n\n      return { ...col,\n        onCell: record => ({\n          record,\n          editable: col.editable,\n          dataIndex: col.dataIndex,\n          title: col.title,\n          handleSave: this.handleSave\n        })\n      };\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: this.handleAdd,\n        type: \"primary\",\n        style: {\n          marginBottom: 16,\n          background: `#509EFC 0% 0% no-repeat padding-box`,\n          borderRadius: `6px`,\n          opacity: `1`,\n          float: `right`,\n          marginTop: `107px`,\n          marginRight: `10%`\n        },\n        children: \"CREATE NEW JOB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        showSearch: true,\n        style: {\n          width: `131px`,\n          float: `right`,\n          marginRight: `1%`,\n          marginTop: `106px`\n        },\n        placeholder: \"Select \",\n        optionFilterProp: \"children\",\n        onChange: this.onChangeS,\n        filterOption: (input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n        children: [/*#__PURE__*/_jsxDEV(Option, {\n          value: \"New York\",\n          children: \"New York\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Option, {\n          value: \"London\",\n          children: \"London\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        components: components,\n        rowClassName: () => 'editable-row',\n        dataSource: dataSource,\n        columns: columns,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default EditableTable;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EditableRow\");\n$RefreshReg$(_c2, \"EditableCell\");","map":{"version":3,"sources":["F:/nadrec/src/components/tables/EditableTable.js"],"names":["React","useContext","useState","useEffect","useRef","ReactDOM","Table","Input","Button","Popconfirm","Form","Space","Select","EditableContext","createContext","EditableRow","index","props","form","useForm","Option","EditableCell","title","editable","children","dataIndex","record","handleSave","restProps","editing","setEditing","inputRef","current","focus","toggleEdit","setFieldsValue","save","values","validateFields","errInfo","console","log","childNode","margin","required","message","paddingRight","onChange","pagination","filters","sorter","extra","result","input","dataSource","filter","item","location","includes","EditableTable","Component","constructor","onChangeS","value","setState","state","handleDelete","key","handleAdd","count","newData","id","Sdate","Edate","status","row","findIndex","splice","columns","width","text","filterMultiple","onFilter","indexOf","a","b","length","sortDirections","render","_","cursor","edit","deletee","componentDidMount","toLowerCase","toLocaleLowerCase","components","body","cell","map","col","onCell","marginBottom","background","borderRadius","opacity","float","marginTop","marginRight","option"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect, useRef } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport { Table, Input, Button, Popconfirm, Form, Space, Select } from 'antd';\r\nimport './style.css';\r\nimport edit from '../../images/edit.svg';\r\nimport deletee from '../../images/delete.svg';\r\n\r\nconst EditableContext = React.createContext(null);\r\n\r\nconst EditableRow = ({ index, ...props }) => {\r\n  const [form] = Form.useForm();\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <EditableContext.Provider value={form}>\r\n        <tr {...props} />\r\n      </EditableContext.Provider>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst { Option } = Select;\r\n\r\nconst EditableCell = ({\r\n  title,\r\n  editable,\r\n  children,\r\n  dataIndex,\r\n  record,\r\n  handleSave,\r\n  ...restProps\r\n}) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const inputRef = useRef(null);\r\n  const form = useContext(EditableContext);\r\n  useEffect(() => {\r\n    if (editing) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [editing]);\r\n\r\n  const toggleEdit = () => {\r\n    setEditing(!editing);\r\n    form.setFieldsValue({\r\n      [dataIndex]: record[dataIndex],\r\n    });\r\n  };\r\n\r\n  const save = async () => {\r\n    try {\r\n      const values = await form.validateFields();\r\n      toggleEdit();\r\n      handleSave({ ...record, ...values });\r\n    } catch (errInfo) {\r\n      console.log('Save failed:', errInfo);\r\n    }\r\n  };\r\n\r\n  let childNode = children;\r\n\r\n  if (editable) {\r\n    childNode = editing ? (\r\n      <Form.Item\r\n        style={{\r\n          margin: 0,\r\n        }}\r\n        name={dataIndex}\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: `${title} is required.`,\r\n          },\r\n        ]}\r\n      >\r\n        <Input ref={inputRef} onPressEnter={save} onBlur={save} />\r\n      </Form.Item>\r\n    ) : (\r\n      <div\r\n        className=\"editable-cell-value-wrap\"\r\n        style={{\r\n          paddingRight: 24,\r\n        }}\r\n        onClick={toggleEdit}\r\n      >\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <td {...restProps}>{childNode}</td>;\r\n};\r\n\r\nfunction onChange(pagination, filters, sorter, extra) {\r\n  console.log('params', pagination, filters, sorter, extra);\r\n}\r\n\r\nconst result = !this.input\r\n  ? this.dataSource\r\n  : this.dataSource.filter((item) =>\r\n      item.location.includes(this.input)\r\n    );\r\n\r\nclass EditableTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.columns = [\r\n      {\r\n        title: '#',\r\n        dataIndex: 'id',\r\n        width: '5%',\r\n        // editable: true,\r\n      },\r\n      {\r\n        title: 'JOB TITLE',\r\n        dataIndex: 'title',\r\n      },\r\n      {\r\n        title: 'JOB LOCATION',\r\n        dataIndex: 'location',\r\n        filters: [\r\n          {\r\n            text: 'London',\r\n            value: 'London',\r\n          },\r\n          {\r\n            text: 'New York',\r\n            value: 'New York',\r\n          },\r\n        ],\r\n        filterMultiple: false,\r\n        // filterDropdownVisible: true,\r\n        onFilter: (value, record) => record.location.indexOf(value) === 0,\r\n        sorter: (a, b) => a.location.length - b.location.length,\r\n        sortDirections: ['descend', 'ascend'],\r\n      },\r\n      {\r\n        title: 'START DATE',\r\n        dataIndex: 'Sdate',\r\n      },\r\n      {\r\n        title: 'END DATE',\r\n        dataIndex: 'Edate',\r\n      },\r\n      {\r\n        title: 'STATUS',\r\n        dataIndex: 'status',\r\n      },\r\n      {\r\n        title: '',\r\n        dataIndex: 'operation',\r\n        width: '20%',\r\n        render: (_, record) => (\r\n          <Space size=\"middle\" style={{ cursor: 'pointer' }}>\r\n            {/* <a>Edit</a> */}\r\n            <img src={edit} alt=\"edit\" />\r\n            <Popconfirm\r\n              title=\"Sure to delete?\"\r\n              onConfirm={() => this.handleDelete(record.key)}\r\n            >\r\n              {/* <a>Delete</a> */}\r\n              <img src={deletee} alt=\"delete\" />\r\n            </Popconfirm>\r\n          </Space>\r\n        ),\r\n      },\r\n    ];\r\n    this.state = {\r\n      dataSource: [\r\n        {\r\n          key: '0',\r\n          id: '0',\r\n          title: '32',\r\n          location: 'London',\r\n          Sdate: '5-10',\r\n          Edate: '9-10',\r\n          status: 'yes',\r\n        },\r\n        {\r\n          key: '1',\r\n          id: ' 1',\r\n          title: '32',\r\n          location: 'New York',\r\n          Sdate: '5-10',\r\n          Edate: '9-10',\r\n          status: 'yes',\r\n        },\r\n      ],\r\n      count: 2,\r\n      input: ' ',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  onChangeS = (value) => {\r\n    // console.log(`selected ${value}`);\r\n    this.setState({\r\n      input: value,\r\n    });\r\n    const dataSource = [...this.state.dataSource];\r\n    // this.setState({\r\n    //   dataSource: dataSource.filter((item) => item.location === value),\r\n    // });\r\n\r\n    const result = !value\r\n      ? dataSource\r\n      : dataSource.filter((item) => item.location.includes(value));\r\n    console.log(result);\r\n  };\r\n\r\n  handleDelete = (key) => {\r\n    const dataSource = [...this.state.dataSource];\r\n    this.setState({\r\n      dataSource: dataSource.filter((item) => item.key !== key),\r\n    });\r\n  };\r\n  handleAdd = () => {\r\n    const { count, dataSource } = this.state;\r\n    const newData = {\r\n      key: count,\r\n      id: `${count}`,\r\n      title: '32',\r\n      location: `London, Park Lane no. ${count}`,\r\n      Sdate: '5-10',\r\n      Edate: '9-10',\r\n      status: 'yes',\r\n    };\r\n    this.setState({\r\n      dataSource: [...dataSource, newData],\r\n      count: count + 1,\r\n    });\r\n  };\r\n  handleSave = (row) => {\r\n    const newData = [...this.state.dataSource];\r\n    const index = newData.findIndex((item) => row.key === item.key);\r\n    const item = newData[index];\r\n    newData.splice(index, 1, { ...item, ...row });\r\n    this.setState({\r\n      dataSource: newData,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { dataSource } = this.state;\r\n    const result = !this.input\r\n      ? this.dataSource\r\n      : this.dataSource.filter((item) =>\r\n          item.location.toLowerCase().includes(this.input.toLocaleLowerCase())\r\n        );\r\n\r\n    const components = {\r\n      body: {\r\n        row: EditableRow,\r\n        cell: EditableCell,\r\n      },\r\n    };\r\n    const columns = this.columns.map((col) => {\r\n      if (!col.editable) {\r\n        return col;\r\n      }\r\n\r\n      return {\r\n        ...col,\r\n        onCell: (record) => ({\r\n          record,\r\n          editable: col.editable,\r\n          dataIndex: col.dataIndex,\r\n          title: col.title,\r\n          handleSave: this.handleSave,\r\n        }),\r\n      };\r\n    });\r\n    return (\r\n      <div>\r\n        <Button\r\n          onClick={this.handleAdd}\r\n          type=\"primary\"\r\n          style={{\r\n            marginBottom: 16,\r\n            background: `#509EFC 0% 0% no-repeat padding-box`,\r\n            borderRadius: `6px`,\r\n            opacity: `1`,\r\n            float: `right`,\r\n            marginTop: `107px`,\r\n            marginRight: `10%`,\r\n          }}\r\n        >\r\n          CREATE NEW JOB\r\n        </Button>\r\n\r\n        <Select\r\n          showSearch\r\n          style={{\r\n            width: `131px`,\r\n            float: `right`,\r\n            marginRight: `1%`,\r\n            marginTop: `106px`,\r\n          }}\r\n          placeholder=\"Select \"\r\n          optionFilterProp=\"children\"\r\n          onChange={this.onChangeS}\r\n          filterOption={(input, option) =>\r\n            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n          }\r\n        >\r\n          <Option value=\"New York\">New York</Option>\r\n          <Option value=\"London\">London</Option>\r\n        </Select>\r\n\r\n        <Table\r\n          components={components}\r\n          rowClassName={() => 'editable-row'}\r\n          dataSource={dataSource}\r\n          columns={columns}\r\n          onChange={onChange}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditableTable;\r\n"]},"metadata":{},"sourceType":"module"}