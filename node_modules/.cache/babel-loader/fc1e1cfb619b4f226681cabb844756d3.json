{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\nadrec\\\\src\\\\pages\\\\JobLocation.js\",\n    _s = $RefreshSig$();\n\nimport EditableTable from '../components/table/EditableTable';\nimport PopUpButton from '../components/buttons/PopUpButton';\nimport MainDropdown from '../components/main-dropdown/MainDropdown';\nimport Options from '../components/options/Options';\nimport { Popconfirm, Space } from 'antd';\nimport edit from \"../images/edit.svg\";\nimport deletee from \"../images/delete.svg\";\nimport React, { useState, useEffect } from 'react';\n\nfunction JobLocation(props) {\n  _s();\n\n  const [countLocation, setCountLocation] = useState(0);\n  const [location, setLocation] = useState();\n  const [jobLocation, setJobLocation] = useState();\n  const [jobName, setJobName] = useState('');\n  const [resultLocationTable, setResultLocationTable] = useState([]);\n  const [resultTempLocation, setResultTempLocation] = useState([]);\n  const [visible2, setVisible2] = useState(false);\n  const columns = [{\n    title: '#',\n    dataIndex: 'id',\n    width: '5%' // editable: true,\n\n  }, {\n    title: 'Name',\n    dataIndex: 'title'\n  }, {\n    title: 'Location',\n    dataIndex: 'location'\n  }, {\n    title: '',\n    dataIndex: 'operation',\n    width: '20%',\n    render: (_, record) => /*#__PURE__*/_jsxDEV(Space, {\n      size: \"large\",\n      style: {\n        cursor: 'pointer',\n        paddingLeft: `63px`\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: edit,\n        alt: \"edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Popconfirm, {\n        title: \"Sure to delete?\",\n        onConfirm: () => handleDeleteLocations(record.key),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: deletee,\n          alt: \"delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }];\n  useEffect(() => {\n    setResultTempLocation(resultLocationTable);\n  }, [resultTempLocation]);\n\n  const onChangeLocation = value => {\n    setLocation(value);\n  };\n\n  const handleDeleteLocations = id => {\n    const dataSource2 = [...resultLocationTable];\n    setResultLocationTable(resultLocationTable.filter(item => item.id !== id));\n    setResultTempLocation(dataSource2.filter(item => item.id !== id));\n  };\n\n  const SaveSelectLocation = value => {\n    setJobLocation(value);\n  };\n\n  const handleChangeLocation = event => {\n    setJobName(event.target.value);\n  };\n\n  const handleOkAddJob = () => {\n    const count2 = countLocation + 1;\n    setResultLocationTable(result => [...result, {\n      title: jobName,\n      location: jobLocation,\n      key: count2,\n      id: count2\n    }]);\n    setResultTempLocation(...resultLocationTable);\n    setCountLocation(count2); // console.log(count);\n\n    setVisible2(false);\n  };\n\n  const showModalAddJob = () => {\n    setVisible2(true);\n  };\n\n  const handleCancelAddJob = () => {\n    setVisible2(false);\n  };\n\n  const onChangeS = value => {\n    const results = !value ? resultTempLocation : resultTempLocation.filter(item => item.location.toLowerCase().includes(value.toLowerCase()));\n\n    if (value === 'all') {\n      setResultLocationTable(resultTempLocation);\n    } else {\n      // setInput(value);\n      setResultLocationTable(results);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Options, {\n      JobLink: \"Job Locations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PopUpButton, {\n      title: \"Locations\",\n      Name: \"Job location name\",\n      selectName: \"Country\",\n      SaveSelectLocation: SaveSelectLocation,\n      jobLocation: jobName,\n      handleChangeLocation: handleChangeLocation,\n      handleOkAddJob: handleOkAddJob,\n      handleCancelAddJob: handleCancelAddJob,\n      showModalAddJob: showModalAddJob,\n      visible2: visible2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainDropdown, {\n      onChangeS: onChangeS\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditableTable, {\n      result: resultLocationTable,\n      columns: columns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(JobLocation, \"QmJJIMj1MnLXyoNgPP1ZinBTQpw=\");\n\n_c = JobLocation;\nexport default JobLocation;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobLocation\");","map":{"version":3,"sources":["F:/nadrec/src/pages/JobLocation.js"],"names":["EditableTable","PopUpButton","MainDropdown","Options","Popconfirm","Space","React","useState","useEffect","JobLocation","props","countLocation","setCountLocation","location","setLocation","jobLocation","setJobLocation","jobName","setJobName","resultLocationTable","setResultLocationTable","resultTempLocation","setResultTempLocation","visible2","setVisible2","columns","title","dataIndex","width","render","_","record","cursor","paddingLeft","edit","handleDeleteLocations","key","deletee","onChangeLocation","value","id","dataSource2","filter","item","SaveSelectLocation","handleChangeLocation","event","target","handleOkAddJob","count2","result","showModalAddJob","handleCancelAddJob","onChangeS","results","toLowerCase","includes"],"mappings":"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","sourcesContent":["import EditableTable from '../components/table/EditableTable';\r\nimport PopUpButton from '../components/buttons/PopUpButton';\r\nimport MainDropdown from '../components/main-dropdown/MainDropdown';\r\nimport Options from '../components/options/Options';\r\nimport { Popconfirm, Space } from 'antd';\r\nimport edit from '../images/edit.svg';\r\nimport deletee from '../images/delete.svg';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nfunction JobLocation(props) {\r\n  const [countLocation, setCountLocation] = useState(0);\r\n  const [location, setLocation] = useState();\r\n  const [jobLocation, setJobLocation] = useState();\r\n  const [jobName, setJobName] = useState('');\r\n  const [resultLocationTable, setResultLocationTable] = useState([]);\r\n  const [resultTempLocation, setResultTempLocation] = useState([]);\r\n  const [visible2, setVisible2] = useState(false);\r\n\r\n  const columns = [\r\n    {\r\n      title: '#',\r\n      dataIndex: 'id',\r\n      width: '5%',\r\n      // editable: true,\r\n    },\r\n\r\n    {\r\n      title: 'Name',\r\n      dataIndex: 'title',\r\n    },\r\n\r\n    {\r\n      title: 'Location',\r\n      dataIndex: 'location',\r\n    },\r\n\r\n    {\r\n      title: '',\r\n      dataIndex: 'operation',\r\n      width: '20%',\r\n      render: (_, record) => (\r\n        <Space size=\"large\" style={{ cursor: 'pointer', paddingLeft: `63px` }}>\r\n          <img src={edit} alt=\"edit\" />\r\n          <Popconfirm\r\n            title=\"Sure to delete?\"\r\n            onConfirm={() => handleDeleteLocations(record.key)}\r\n          >\r\n            <img src={deletee} alt=\"delete\" />\r\n          </Popconfirm>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    setResultTempLocation(resultLocationTable);\r\n  }, [resultTempLocation]);\r\n\r\n  const onChangeLocation = (value) => {\r\n    setLocation(value);\r\n  };\r\n  const handleDeleteLocations = (id) => {\r\n    const dataSource2 = [...resultLocationTable];\r\n    setResultLocationTable(resultLocationTable.filter((item) => item.id !== id));\r\n    setResultTempLocation(dataSource2.filter((item) => item.id !== id));\r\n  };\r\n\r\n  const SaveSelectLocation = (value) => {\r\n    setJobLocation(value);\r\n  };\r\n\r\n  const handleChangeLocation = (event) => {\r\n    setJobName(event.target.value);\r\n  };\r\n\r\n  const handleOkAddJob = () => {\r\n    const count2 = countLocation + 1;\r\n    setResultLocationTable((result) => [\r\n      ...result,\r\n      {\r\n        title: jobName,\r\n        location: jobLocation,\r\n        key: count2,\r\n        id: count2,\r\n      },\r\n    ]);\r\n    setResultTempLocation(...resultLocationTable);\r\n    setCountLocation(count2);\r\n    // console.log(count);\r\n    setVisible2(false);\r\n  };\r\n\r\n  const showModalAddJob = () => {\r\n    setVisible2(true);\r\n  };\r\n\r\n  const handleCancelAddJob = () => {\r\n    setVisible2(false);\r\n  };\r\n\r\n  const onChangeS = (value) => {\r\n    const results = !value\r\n      ? resultTempLocation\r\n      : resultTempLocation.filter((item) =>\r\n          item.location.toLowerCase().includes(value.toLowerCase())\r\n        );\r\n\r\n    if (value === 'all') {\r\n      setResultLocationTable(resultTempLocation);\r\n    } else {\r\n      // setInput(value);\r\n      setResultLocationTable(results);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Options JobLink=\"Job Locations\" />\r\n      <PopUpButton\r\n        title=\"Locations\"\r\n        Name=\"Job location name\"\r\n        selectName=\"Country\"\r\n        SaveSelectLocation={SaveSelectLocation}\r\n        jobLocation={jobName}\r\n        handleChangeLocation={handleChangeLocation}\r\n        handleOkAddJob={handleOkAddJob}\r\n        handleCancelAddJob={handleCancelAddJob}\r\n        showModalAddJob={showModalAddJob}\r\n        visible2={visible2}\r\n      />\r\n      <MainDropdown onChangeS={onChangeS} />\r\n      <EditableTable result={resultLocationTable} columns={columns} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default JobLocation;\r\n"]},"metadata":{},"sourceType":"module"}