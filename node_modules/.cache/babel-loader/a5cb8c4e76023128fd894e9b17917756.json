{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\nadrec\\\\src\\\\components\\\\job-board\\\\DragDrop.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState, useCallback, useRef } from 'react';\nimport { DndProvider, useDrag, useDrop } from 'react-dnd';\nimport HTML5Backend from 'react-dnd-html5-backend';\nimport update from 'immutability-helper';\nconst tasksList = [{\n  _id: 1,\n  title: 'First Task',\n  status: 'backlog'\n}, {\n  _id: 2,\n  title: 'Second Task',\n  status: 'backlog'\n}, {\n  _id: 3,\n  title: 'Third Task',\n  status: 'backlog'\n}, {\n  _id: 4,\n  title: 'Fourth Task',\n  status: 'new'\n}, {\n  _id: 5,\n  title: 'Fifth Task',\n  status: 'new'\n}, {\n  _id: 6,\n  title: 'Sixth Task',\n  status: 'wip'\n}, {\n  _id: 7,\n  title: 'Seventh Task',\n  status: 'review'\n}, {\n  _id: 8,\n  title: 'Eighth Task',\n  status: 'review'\n}, {\n  _id: 9,\n  title: 'Ninth Task',\n  status: 'done'\n}, {\n  _id: 10,\n  title: 'Tenth Task',\n  status: 'done'\n}];\nconst channels = ['backlog', 'new', 'wip', 'review', 'done'];\nconst labelsMap = {\n  backlog: 'Backlog',\n  new: 'To Do',\n  wip: 'In Progress',\n  review: 'Review',\n  done: 'Done'\n};\nconst classes = {\n  board: {\n    display: 'flex',\n    margin: '0 auto',\n    width: '90vw',\n    fontFamily: 'Arial, \"Helvetica Neue\", sans-serif'\n  },\n  column: {\n    minWidth: 200,\n    width: '18vw',\n    height: '80vh',\n    margin: '0 auto',\n    backgroundColor: '#FCC8B2'\n  },\n  columnHead: {\n    textAlign: 'center',\n    padding: 10,\n    fontSize: '1.2em',\n    backgroundColor: '#C6D8AF'\n  },\n  item: {\n    padding: 10,\n    margin: 10,\n    fontSize: '0.8em',\n    cursor: 'pointer',\n    backgroundColor: 'white'\n  }\n};\n\nconst DragDrop = () => {\n  _s();\n\n  const [tasks, setTaskStatus] = useState(tasksList);\n  const changeTaskStatus = useCallback((id, status) => {\n    let task = tasks.find(task => task._id === id);\n    const taskIndex = tasks.indexOf(task);\n    task = { ...task,\n      status\n    };\n    let newTasks = update(tasks, {\n      [taskIndex]: {\n        $set: task\n      }\n    });\n    setTaskStatus(newTasks);\n  }, [tasks]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: \" Kanban Board \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DndProvider, {\n      backend: HTML5Backend,\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        style: classes.board,\n        children: channels.map(channel => /*#__PURE__*/_jsxDEV(KanbanColumn, {\n          status: channel,\n          changeTaskStatus: changeTaskStatus,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: classes.column,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: classes.columnHead,\n              children: labelsMap[channel]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: tasks.filter(item => item.status === channel).map(item => /*#__PURE__*/_jsxDEV(KanbanItem, {\n                id: item._id,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: classes.item,\n                  children: item.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 25\n                }, this)\n              }, item._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)\n        }, channel, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DragDrop, \"DkRBXBVXMdZ04Lj1ejgZ1O/CfTw=\");\n\n_c = DragDrop;\nexport default DragDrop;\n\nconst KanbanColumn = ({\n  status,\n  changeTaskStatus,\n  children\n}) => {\n  _s2();\n\n  const ref = useRef(null);\n  const [, drop] = useDrop({\n    accept: 'card',\n\n    drop(item) {\n      changeTaskStatus(item.id, status);\n    }\n\n  });\n  drop(ref);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    children: [\" \", children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 10\n  }, this);\n};\n\n_s2(KanbanColumn, \"jNyD3LiDULwN1wggB3ULPaLZVmI=\", false, function () {\n  return [useDrop];\n});\n\n_c2 = KanbanColumn;\n\nconst KanbanItem = ({\n  id,\n  children\n}) => {\n  _s3();\n\n  const ref = useRef(null);\n  const [{\n    isDragging\n  }, drag] = useDrag({\n    item: {\n      type: 'card',\n      id\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  });\n  const opacity = isDragging ? 0 : 1;\n  drag(ref);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    style: {\n      opacity\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(KanbanItem, \"SAotHx5N7ORcDCKJxIYnUEpUB64=\", false, function () {\n  return [useDrag];\n});\n\n_c3 = KanbanItem;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"DragDrop\");\n$RefreshReg$(_c2, \"KanbanColumn\");\n$RefreshReg$(_c3, \"KanbanItem\");","map":{"version":3,"sources":["F:/nadrec/src/components/job-board/DragDrop.js"],"names":["React","useState","useCallback","useRef","DndProvider","useDrag","useDrop","HTML5Backend","update","tasksList","_id","title","status","channels","labelsMap","backlog","new","wip","review","done","classes","board","display","margin","width","fontFamily","column","minWidth","height","backgroundColor","columnHead","textAlign","padding","fontSize","item","cursor","DragDrop","tasks","setTaskStatus","changeTaskStatus","id","task","find","taskIndex","indexOf","newTasks","$set","map","channel","filter","KanbanColumn","children","ref","drop","accept","KanbanItem","isDragging","drag","type","collect","monitor","opacity"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useRef } from 'react';\r\nimport { DndProvider, useDrag, useDrop } from 'react-dnd';\r\nimport HTML5Backend from 'react-dnd-html5-backend';\r\nimport update from 'immutability-helper';\r\n\r\nconst tasksList = [\r\n  { _id: 1, title: 'First Task', status: 'backlog' },\r\n  { _id: 2, title: 'Second Task', status: 'backlog' },\r\n  { _id: 3, title: 'Third Task', status: 'backlog' },\r\n  { _id: 4, title: 'Fourth Task', status: 'new' },\r\n  { _id: 5, title: 'Fifth Task', status: 'new' },\r\n  { _id: 6, title: 'Sixth Task', status: 'wip' },\r\n  { _id: 7, title: 'Seventh Task', status: 'review' },\r\n  { _id: 8, title: 'Eighth Task', status: 'review' },\r\n  { _id: 9, title: 'Ninth Task', status: 'done' },\r\n  { _id: 10, title: 'Tenth Task', status: 'done' },\r\n];\r\n\r\nconst channels = ['backlog', 'new', 'wip', 'review', 'done'];\r\nconst labelsMap = {\r\n  backlog: 'Backlog',\r\n  new: 'To Do',\r\n  wip: 'In Progress',\r\n  review: 'Review',\r\n  done: 'Done',\r\n};\r\n\r\nconst classes = {\r\n  board: {\r\n    display: 'flex',\r\n    margin: '0 auto',\r\n    width: '90vw',\r\n    fontFamily: 'Arial, \"Helvetica Neue\", sans-serif',\r\n  },\r\n  column: {\r\n    minWidth: 200,\r\n    width: '18vw',\r\n    height: '80vh',\r\n    margin: '0 auto',\r\n    backgroundColor: '#FCC8B2',\r\n  },\r\n  columnHead: {\r\n    textAlign: 'center',\r\n    padding: 10,\r\n    fontSize: '1.2em',\r\n    backgroundColor: '#C6D8AF',\r\n  },\r\n  item: {\r\n    padding: 10,\r\n    margin: 10,\r\n    fontSize: '0.8em',\r\n    cursor: 'pointer',\r\n    backgroundColor: 'white',\r\n  },\r\n};\r\n\r\nconst DragDrop = () => {\r\n  const [tasks, setTaskStatus] = useState(tasksList);\r\n\r\n  const changeTaskStatus = useCallback(\r\n    (id, status) => {\r\n      let task = tasks.find((task) => task._id === id);\r\n      const taskIndex = tasks.indexOf(task);\r\n      task = { ...task, status };\r\n      let newTasks = update(tasks, {\r\n        [taskIndex]: { $set: task },\r\n      });\r\n      setTaskStatus(newTasks);\r\n    },\r\n    [tasks]\r\n  );\r\n\r\n  return (\r\n    <main>\r\n      <header> Kanban Board </header>\r\n      <DndProvider backend={HTML5Backend}>\r\n        <section style={classes.board}>\r\n          {channels.map((channel) => (\r\n            <KanbanColumn\r\n              key={channel}\r\n              status={channel}\r\n              changeTaskStatus={changeTaskStatus}\r\n            >\r\n              <div style={classes.column}>\r\n                <div style={classes.columnHead}>{labelsMap[channel]}</div>\r\n                <div>\r\n                  {tasks\r\n                    .filter((item) => item.status === channel)\r\n                    .map((item) => (\r\n                      <KanbanItem key={item._id} id={item._id}>\r\n                        <div style={classes.item}>{item.title}</div>\r\n                      </KanbanItem>\r\n                    ))}\r\n                </div>\r\n              </div>\r\n            </KanbanColumn>\r\n          ))}\r\n        </section>\r\n      </DndProvider>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default DragDrop;\r\n\r\nconst KanbanColumn = ({ status, changeTaskStatus, children }) => {\r\n  const ref = useRef(null);\r\n  const [, drop] = useDrop({\r\n    accept: 'card',\r\n    drop(item) {\r\n      changeTaskStatus(item.id, status);\r\n    },\r\n  });\r\n  drop(ref);\r\n  return <div ref={ref}> {children}</div>;\r\n};\r\n\r\nconst KanbanItem = ({ id, children }) => {\r\n  const ref = useRef(null);\r\n  const [{ isDragging }, drag] = useDrag({\r\n    item: { type: 'card', id },\r\n    collect: (monitor) => ({\r\n      isDragging: monitor.isDragging(),\r\n    }),\r\n  });\r\n  const opacity = isDragging ? 0 : 1;\r\n  drag(ref);\r\n  return (\r\n    <div ref={ref} style={{ opacity }}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}