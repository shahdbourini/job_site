{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\nadrec\\\\src\\\\components\\\\job-board\\\\DragDrop.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport Board, { moveCard } from '@lourenci/react-kanban';\nexport default function DragDrop(props) {\n  var _s = $RefreshSig$();\n\n  const board = {\n    columns: [{\n      id: 1,\n      title: 'Backlog',\n      cards: [{\n        id: 1,\n        title: id,\n        description: 'Card content'\n      }, {\n        id: 2,\n        title: 'Card title 2',\n        description: 'Card content'\n      }, {\n        id: 3,\n        title: 'Card title 3',\n        description: 'Card content'\n      }]\n    }, {\n      id: 2,\n      title: 'Doing',\n      cards: [{\n        id: 9,\n        title: 'Card title 9',\n        description: 'Card content'\n      }]\n    }, {\n      id: 3,\n      title: 'Q&A',\n      cards: [{\n        id: 10,\n        title: 'Card title 10',\n        description: 'Card content'\n      }, {\n        id: 11,\n        title: 'Card title 11',\n        description: 'Card content'\n      }]\n    }, {\n      id: 4,\n      title: 'Production',\n      cards: [{\n        id: 12,\n        title: 'Card title 12',\n        description: 'Card content'\n      }, {\n        id: 13,\n        title: 'Card title 13',\n        description: 'Card content'\n      }]\n    }]\n  };\n\n  function ControlledBoard() {\n    _s();\n\n    // You need to control the state yourself.\n    const [controlledBoard, setBoard] = useState(board);\n\n    function handleCardMove(_card, source, destination) {\n      const updatedBoard = moveCard(controlledBoard, source, destination);\n      setBoard(updatedBoard);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Board, {\n      onCardDragEnd: handleCardMove,\n      disableColumnDrag: true,\n      children: controlledBoard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  }\n\n  _s(ControlledBoard, \"4kpf5uQrtxO1PvDU8aNnGaXYJtM=\");\n\n  function UncontrolledBoard() {\n    return /*#__PURE__*/_jsxDEV(Board, {\n      allowRemoveLane: true,\n      allowRenameColumn: true,\n      allowRemoveCard: true,\n      onLaneRemove: console.log,\n      onCardRemove: console.log,\n      onLaneRename: console.log,\n      initialBoard: board,\n      allowAddCard: {\n        on: 'top'\n      },\n      onNewCardConfirm: draftCard => ({\n        id: new Date().getTime(),\n        ...draftCard\n      }),\n      onCardNew: console.log\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Example of an uncontrolled board\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UncontrolledBoard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Example of a controlled board\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Just the card moving is implemented in this demo.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"In this kind of board, you can do whatever you want. We just mirror your board state.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ControlledBoard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n_c = DragDrop;\n\nvar _c;\n\n$RefreshReg$(_c, \"DragDrop\");","map":{"version":3,"sources":["F:/nadrec/src/components/job-board/DragDrop.js"],"names":["React","useState","ReactDOM","Board","moveCard","DragDrop","props","board","columns","id","title","cards","description","ControlledBoard","controlledBoard","setBoard","handleCardMove","_card","source","destination","updatedBoard","UncontrolledBoard","console","log","on","draftCard","Date","getTime"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,wBAAhC;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACtC,QAAMC,KAAK,GAAG;AACZC,IAAAA,OAAO,EAAE,CACP;AACEC,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,KAAK,EAAE,SAFT;AAGEC,MAAAA,KAAK,EAAE,CACL;AACEF,QAAAA,EAAE,EAAE,CADN;AAEEC,QAAAA,KAAK,EAAED,EAFT;AAGEG,QAAAA,WAAW,EAAE;AAHf,OADK,EAML;AACEH,QAAAA,EAAE,EAAE,CADN;AAEEC,QAAAA,KAAK,EAAE,cAFT;AAGEE,QAAAA,WAAW,EAAE;AAHf,OANK,EAWL;AACEH,QAAAA,EAAE,EAAE,CADN;AAEEC,QAAAA,KAAK,EAAE,cAFT;AAGEE,QAAAA,WAAW,EAAE;AAHf,OAXK;AAHT,KADO,EAsBP;AACEH,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,KAAK,EAAE,OAFT;AAGEC,MAAAA,KAAK,EAAE,CACL;AACEF,QAAAA,EAAE,EAAE,CADN;AAEEC,QAAAA,KAAK,EAAE,cAFT;AAGEE,QAAAA,WAAW,EAAE;AAHf,OADK;AAHT,KAtBO,EAiCP;AACEH,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,KAAK,EAAE,KAFT;AAGEC,MAAAA,KAAK,EAAE,CACL;AACEF,QAAAA,EAAE,EAAE,EADN;AAEEC,QAAAA,KAAK,EAAE,eAFT;AAGEE,QAAAA,WAAW,EAAE;AAHf,OADK,EAML;AACEH,QAAAA,EAAE,EAAE,EADN;AAEEC,QAAAA,KAAK,EAAE,eAFT;AAGEE,QAAAA,WAAW,EAAE;AAHf,OANK;AAHT,KAjCO,EAiDP;AACEH,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,KAAK,EAAE,YAFT;AAGEC,MAAAA,KAAK,EAAE,CACL;AACEF,QAAAA,EAAE,EAAE,EADN;AAEEC,QAAAA,KAAK,EAAE,eAFT;AAGEE,QAAAA,WAAW,EAAE;AAHf,OADK,EAML;AACEH,QAAAA,EAAE,EAAE,EADN;AAEEC,QAAAA,KAAK,EAAE,eAFT;AAGEE,QAAAA,WAAW,EAAE;AAHf,OANK;AAHT,KAjDO;AADG,GAAd;;AAqEA,WAASC,eAAT,GAA2B;AAAA;;AACzB;AACA,UAAM,CAACC,eAAD,EAAkBC,QAAlB,IAA8Bd,QAAQ,CAACM,KAAD,CAA5C;;AAEA,aAASS,cAAT,CAAwBC,KAAxB,EAA+BC,MAA/B,EAAuCC,WAAvC,EAAoD;AAClD,YAAMC,YAAY,GAAGhB,QAAQ,CAACU,eAAD,EAAkBI,MAAlB,EAA0BC,WAA1B,CAA7B;AACAJ,MAAAA,QAAQ,CAACK,YAAD,CAAR;AACD;;AAED,wBACE,QAAC,KAAD;AAAO,MAAA,aAAa,EAAEJ,cAAtB;AAAsC,MAAA,iBAAiB,MAAvD;AAAA,gBACGF;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AApFqC,KAsE7BD,eAtE6B;;AAsFtC,WAASQ,iBAAT,GAA6B;AAC3B,wBACE,QAAC,KAAD;AACE,MAAA,eAAe,MADjB;AAEE,MAAA,iBAAiB,MAFnB;AAGE,MAAA,eAAe,MAHjB;AAIE,MAAA,YAAY,EAAEC,OAAO,CAACC,GAJxB;AAKE,MAAA,YAAY,EAAED,OAAO,CAACC,GALxB;AAME,MAAA,YAAY,EAAED,OAAO,CAACC,GANxB;AAOE,MAAA,YAAY,EAAEhB,KAPhB;AAQE,MAAA,YAAY,EAAE;AAAEiB,QAAAA,EAAE,EAAE;AAAN,OARhB;AASE,MAAA,gBAAgB,EAAGC,SAAD,KAAgB;AAChChB,QAAAA,EAAE,EAAE,IAAIiB,IAAJ,GAAWC,OAAX,EAD4B;AAEhC,WAAGF;AAF6B,OAAhB,CATpB;AAaE,MAAA,SAAS,EAAEH,OAAO,CAACC;AAbrB;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD;;AACD,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eASE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;KAtHuBlB,Q","sourcesContent":["import React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Board, { moveCard } from '@lourenci/react-kanban';\r\n\r\nexport default function DragDrop(props) {\r\n  const board = {\r\n    columns: [\r\n      {\r\n        id: 1,\r\n        title: 'Backlog',\r\n        cards: [\r\n          {\r\n            id: 1,\r\n            title: id,\r\n            description: 'Card content',\r\n          },\r\n          {\r\n            id: 2,\r\n            title: 'Card title 2',\r\n            description: 'Card content',\r\n          },\r\n          {\r\n            id: 3,\r\n            title: 'Card title 3',\r\n            description: 'Card content',\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: 2,\r\n        title: 'Doing',\r\n        cards: [\r\n          {\r\n            id: 9,\r\n            title: 'Card title 9',\r\n            description: 'Card content',\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: 3,\r\n        title: 'Q&A',\r\n        cards: [\r\n          {\r\n            id: 10,\r\n            title: 'Card title 10',\r\n            description: 'Card content',\r\n          },\r\n          {\r\n            id: 11,\r\n            title: 'Card title 11',\r\n            description: 'Card content',\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: 4,\r\n        title: 'Production',\r\n        cards: [\r\n          {\r\n            id: 12,\r\n            title: 'Card title 12',\r\n            description: 'Card content',\r\n          },\r\n          {\r\n            id: 13,\r\n            title: 'Card title 13',\r\n            description: 'Card content',\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n\r\n  function ControlledBoard() {\r\n    // You need to control the state yourself.\r\n    const [controlledBoard, setBoard] = useState(board);\r\n\r\n    function handleCardMove(_card, source, destination) {\r\n      const updatedBoard = moveCard(controlledBoard, source, destination);\r\n      setBoard(updatedBoard);\r\n    }\r\n\r\n    return (\r\n      <Board onCardDragEnd={handleCardMove} disableColumnDrag>\r\n        {controlledBoard}\r\n      </Board>\r\n    );\r\n  }\r\n\r\n  function UncontrolledBoard() {\r\n    return (\r\n      <Board\r\n        allowRemoveLane\r\n        allowRenameColumn\r\n        allowRemoveCard\r\n        onLaneRemove={console.log}\r\n        onCardRemove={console.log}\r\n        onLaneRename={console.log}\r\n        initialBoard={board}\r\n        allowAddCard={{ on: 'top' }}\r\n        onNewCardConfirm={(draftCard) => ({\r\n          id: new Date().getTime(),\r\n          ...draftCard,\r\n        })}\r\n        onCardNew={console.log}\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      <h4>Example of an uncontrolled board</h4>\r\n      <UncontrolledBoard />\r\n      <h4>Example of a controlled board</h4>\r\n      <p>Just the card moving is implemented in this demo.</p>\r\n      <p>\r\n        In this kind of board, you can do whatever you want. We just mirror your\r\n        board state.\r\n      </p>\r\n      <ControlledBoard />\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}