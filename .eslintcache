[{"F:\\space\\src\\index.js":"1","F:\\space\\src\\App.js":"2","F:\\space\\src\\reportWebVitals.js":"3","F:\\space\\src\\pages\\Home.js":"4","F:\\space\\src\\components\\navbar\\Navbar.js":"5","F:\\space\\src\\components\\about\\About.js":"6","F:\\space\\src\\components\\features\\Features.js":"7","F:\\space\\src\\components\\footer\\Footer.js":"8","F:\\space\\src\\components\\contact\\Contact.js":"9","F:\\space\\src\\components\\img\\Img.js":"10","F:\\space\\src\\components\\plans\\Plans.js":"11","F:\\space\\src\\components\\partners\\Partners.js":"12","F:\\space\\src\\components\\lines\\Lines.js":"13","F:\\space\\src\\components\\startup\\Startup.js":"14","F:\\space\\src\\components\\events\\Events.js":"15","F:\\nadrec\\src\\index.js":"16","F:\\nadrec\\src\\reportWebVitals.js":"17","F:\\nadrec\\src\\App.js":"18","F:\\nadrec\\src\\components\\table\\EditableTable.js":"19","F:\\nadrec\\src\\pages\\NewJob.js":"20","F:\\nadrec\\src\\components\\buttons\\Buttons.js":"21","F:\\nadrec\\src\\pages\\Skills.js":"22","F:\\nadrec\\src\\pages\\JobApp.js":"23","F:\\nadrec\\src\\pages\\JobCat.js":"24","F:\\nadrec\\src\\pages\\JobLocation.js":"25","F:\\nadrec\\src\\pages\\JobTable.js":"26","F:\\nadrec\\src\\components\\Modal\\Modall.js":"27","F:\\nadrec\\src\\components\\main-dropdown\\MainDropdown.js":"28","F:\\nadrec\\src\\components\\search-filter\\SearchFilter.js":"29","F:\\nadrec\\src\\components\\options\\Options.js":"30","F:\\nadrec\\src\\components\\AddNew-Popup\\AddNew.js":"31","F:\\nadrec\\src\\components\\buttons\\PopUpButton.js":"32","F:\\nadrec\\src\\components\\job-opening\\jobOpening.js":"33","F:\\nadrec\\src\\components\\job-opening\\JobOpening.js":"34","F:\\nadrec\\src\\components\\job-opening\\ModalJob.js":"35","F:\\nadrec\\src\\components\\jobs-Details\\JobDetails.js":"36","F:\\nadrec\\src\\components\\job-apply-form\\ApplyForm.js":"37","F:\\nadrec\\src\\components\\drag-and-drop\\DragDrop.js":"38","F:\\nadrec\\src\\pages\\JobBoard.js":"39","F:\\nadrec\\src\\components\\job-boardCom\\JobBoardCom.js":"40"},{"size":500,"mtime":499162500000,"results":"41","hashOfConfig":"42"},{"size":140,"mtime":1611660107303,"results":"43","hashOfConfig":"42"},{"size":364,"mtime":1611660192403,"results":"44","hashOfConfig":"42"},{"size":1046,"mtime":1611829784991,"results":"45","hashOfConfig":"42"},{"size":2916,"mtime":1611743320991,"results":"46","hashOfConfig":"42"},{"size":1632,"mtime":1611783125377,"results":"47","hashOfConfig":"42"},{"size":3333,"mtime":1611825859729,"results":"48","hashOfConfig":"42"},{"size":129,"mtime":1611775810085,"results":"49","hashOfConfig":"42"},{"size":848,"mtime":1611828309460,"results":"50","hashOfConfig":"42"},{"size":2194,"mtime":1611839250828,"results":"51","hashOfConfig":"42"},{"size":2846,"mtime":1611832236017,"results":"52","hashOfConfig":"42"},{"size":2396,"mtime":1611829759158,"results":"53","hashOfConfig":"42"},{"size":355,"mtime":1611755718197,"results":"54","hashOfConfig":"42"},{"size":2417,"mtime":1611829732164,"results":"55","hashOfConfig":"42"},{"size":2589,"mtime":1611826561303,"results":"56","hashOfConfig":"42"},{"size":500,"mtime":1613040299000,"results":"57","hashOfConfig":"58"},{"size":364,"mtime":1613224899967,"results":"59","hashOfConfig":"58"},{"size":1619,"mtime":1621795470810,"results":"60","hashOfConfig":"58"},{"size":2684,"mtime":1615297391843,"results":"61","hashOfConfig":"58"},{"size":4608,"mtime":1613308340079,"results":"62","hashOfConfig":"58"},{"size":1315,"mtime":1615228029533,"results":"63","hashOfConfig":"58"},{"size":3534,"mtime":1614592887042,"results":"64","hashOfConfig":"58"},{"size":11318,"mtime":1615320279108,"results":"65","hashOfConfig":"58"},{"size":3215,"mtime":1614593768314,"results":"66","hashOfConfig":"58"},{"size":3788,"mtime":1614592831737,"results":"67","hashOfConfig":"58"},{"size":3840,"mtime":1615230752771,"results":"68","hashOfConfig":"58"},{"size":4112,"mtime":1615296965599,"results":"69","hashOfConfig":"58"},{"size":3436,"mtime":1621795482255,"results":"70","hashOfConfig":"58"},{"size":811,"mtime":1614158619891,"results":"71","hashOfConfig":"58"},{"size":1766,"mtime":1615228616883,"results":"72","hashOfConfig":"58"},{"size":3923,"mtime":1614593684135,"results":"73","hashOfConfig":"58"},{"size":1323,"mtime":1614545174363,"results":"74","hashOfConfig":"58"},{"size":3340,"mtime":1614680524820,"results":"75","hashOfConfig":"58"},{"size":3906,"mtime":1614690401528,"results":"76","hashOfConfig":"58"},{"size":2438,"mtime":1614689798719,"results":"77","hashOfConfig":"58"},{"size":2554,"mtime":1614763263449,"results":"78","hashOfConfig":"58"},{"size":1822,"mtime":1614773371169,"results":"79","hashOfConfig":"58"},{"size":4593,"mtime":1615226937772,"results":"80","hashOfConfig":"58"},{"size":3781,"mtime":1615225962649,"results":"81","hashOfConfig":"58"},{"size":2306,"mtime":1615227999009,"results":"82","hashOfConfig":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},"1fn3gtc",{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"85"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"85"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},"18lyeql",{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"118"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"118"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"118"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"118"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"118"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"118"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"118"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"118"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"159","messages":"160","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"118"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"118"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"118"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"118"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"118"},"F:\\space\\src\\index.js",[],["180","181"],"F:\\space\\src\\App.js",[],"F:\\space\\src\\reportWebVitals.js",[],"F:\\space\\src\\pages\\Home.js",[],"F:\\space\\src\\components\\navbar\\Navbar.js",[],"F:\\space\\src\\components\\about\\About.js",[],"F:\\space\\src\\components\\features\\Features.js",[],"F:\\space\\src\\components\\footer\\Footer.js",[],"F:\\space\\src\\components\\contact\\Contact.js",[],"F:\\space\\src\\components\\img\\Img.js",["182"],"import main from '../../images/main.png';\r\nimport { Row, Col, Select, Button } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport './style-img.css';\r\n\r\nfunction Img(props) {\r\n  const { Option } = Select;\r\n  return (\r\n    <>\r\n      <Row className=\"main\">\r\n        <Col\r\n          xs={{ span: 15, offset: 5 }}\r\n          sm={{ span: 15, offset: 6 }}\r\n          md={{ span: 12, offset: 6 }}\r\n          lg={{ span: 8, offset: 2 }}\r\n        >\r\n          <div className=\"box\">\r\n            <h4>\r\n              The Future Start <bold style={{ color: `#957BAA` }}>Here</bold>\r\n            </h4>\r\n            <p>Be part of the largest startup community in the region </p>\r\n            <span className=\"title-select\">Find Co-Working Space In</span>\r\n            <Select\r\n              showSearch\r\n              style={{ width: `69%` }}\r\n              placeholder=\"Select a country\"\r\n              optionFilterProp=\"children\"\r\n              filterOption={(input, option) =>\r\n                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n              }\r\n              size=\"large\"\r\n            >\r\n              <Option value=\"Palestine\">Palestine</Option>\r\n              <Option value=\"Saudi\">Saudi Arabia-Riyad</Option>\r\n              <Option value=\"Nablus\">Nablus</Option>\r\n            </Select>\r\n\r\n            <div className=\"button\">\r\n              <Button type=\"primary\" size=\"large\">\r\n                Book Now\r\n              </Button>\r\n              <Button\r\n                size=\"large\"\r\n                style={{\r\n                  background: `white`,\r\n                  color: `#957baa`,\r\n                  border: `1px solid #957baa`,\r\n                }}\r\n              >\r\n                More info\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n\r\n        {/* <Col\r\n          xs={{ span: 2, offset: 7 }}\r\n          sm={{ span: 2, offset: 10 }}\r\n          md={{ span: 2, offset: 12 }}\r\n          lg={{ span: 2, offset: 12 }}\r\n        >\r\n          <span className=\"circle\">\r\n            <i className=\"fa fa-arrow-right arrow\" aria-hidden=\"true\"></i>\r\n          </span>\r\n        </Col> */}\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Img;\r\n","F:\\space\\src\\components\\plans\\Plans.js",[],"F:\\space\\src\\components\\partners\\Partners.js",[],"F:\\space\\src\\components\\lines\\Lines.js",["183"],"import './style-line.css';\r\nimport { Row, Col } from 'antd';\r\nimport 'antd/dist/antd.css';\r\n\r\nfunction Lines(props) {\r\n  return (\r\n    <>\r\n      <Row style={{ direction: `rtl` }}>\r\n        <div className=\"line1\"></div>\r\n        <div className=\"line2\"></div>\r\n        <div className=\"line3\"></div>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Lines;\r\n","F:\\space\\src\\components\\startup\\Startup.js",[],"F:\\space\\src\\components\\events\\Events.js",[],"F:\\nadrec\\src\\index.js",[],["184","185"],"F:\\nadrec\\src\\reportWebVitals.js",[],"F:\\nadrec\\src\\App.js",["186","187"],"F:\\nadrec\\src\\components\\table\\EditableTable.js",["188","189","190","191","192","193","194","195","196","197","198","199"],"import React, { useContext, useState, useEffect, useRef } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport { Table, Input, Popconfirm, Space, Select } from 'antd';\r\nimport './style-table.css';\r\nimport edit from '../../images/edit.svg';\r\nimport deletee from '../../images/delete.svg';\r\nimport { Link } from 'react-router-dom';\r\nimport Modall from '../Modal/Modall';\r\n\r\nfunction EditableTable(props) {\r\n  // console.log(props.ModalVisible);\r\n  // useEffect(() => {\r\n  //   setResult(dataSource);\r\n  // }, []);\r\n\r\n  // const {\r\n  //   jobTitleT,\r\n  //   jobTitle,\r\n  //   jobLocation,\r\n  //   jobLocationT,\r\n  //   skills,\r\n  //   skillsT,\r\n  //   CategoriesNameT,\r\n  //   CategoriesName,\r\n  //   startDate,\r\n  //   endDate,\r\n  //   startDateT,\r\n  //   endDateT,\r\n  //   statusT,\r\n  //   statuss,\r\n  //   num,\r\n  // } = props;\r\n\r\n  // const columns = [\r\n  //   {\r\n  //     title: '#',\r\n  //     dataIndex: 'id',\r\n  //     width: '5%',\r\n  //     // editable: true,\r\n  //   },\r\n  //   {\r\n  //     title: jobTitleT,\r\n  //     dataIndex: jobTitle,\r\n  //   },\r\n  //   {\r\n  //     title: skillsT,\r\n  //     dataIndex: skills,\r\n  //   },\r\n  //   {\r\n  //     title: CategoriesNameT,\r\n  //     dataIndex: CategoriesName,\r\n  //   },\r\n  //   {\r\n  //     title: jobLocationT,\r\n  //     dataIndex: jobLocation,\r\n  //   },\r\n  //   {\r\n  //     title: startDateT,\r\n  //     dataIndex: startDate,\r\n  //   },\r\n  //   {\r\n  //     title: endDateT,\r\n  //     dataIndex: endDate,\r\n  //   },\r\n  //   {\r\n  //     title: statusT,\r\n  //     dataIndex: statuss,\r\n  //   },\r\n  //   {\r\n  //     title: '',\r\n  //     dataIndex: 'operation',\r\n  //     width: '20%',\r\n  //     render: (_, record) => (\r\n  //       <Space size=\"large\" style={{ cursor: 'pointer', paddingLeft: `63px` }}>\r\n  //         <img src={edit} alt=\"edit\" />\r\n  //         <Popconfirm\r\n  //           title=\"Sure to delete?\"\r\n  //           onConfirm={() => props.handleDelete(record.key)}\r\n  //         >\r\n  //           <img src={deletee} alt=\"delete\" />\r\n  //         </Popconfirm>\r\n  //       </Space>\r\n  //     ),\r\n  //   },\r\n  // ];\r\n\r\n  return (\r\n    <>\r\n      <Modall\r\n        visible={props.ModalVisible}\r\n        onOk={props.handleOk}\r\n        onCancel={props.handleCancel}\r\n        onChangeStatus={props.onChangeStatus}\r\n        onChangeLocation={props.onChangeLocation}\r\n        onChangeJob={props.onChangeJob}\r\n        onChangeStart={props.onChangeStart}\r\n        onChangeEnd={props.onChangeEnd}\r\n      />\r\n\r\n      <Table\r\n        rowClassName={() => 'editable-row'}\r\n        dataSource={props.result}\r\n        columns={props.columns}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EditableTable;\r\n","F:\\nadrec\\src\\pages\\NewJob.js",[],"F:\\nadrec\\src\\components\\buttons\\Buttons.js",[],"F:\\nadrec\\src\\pages\\Skills.js",["200","201"],"import PopUpButton from '../components/buttons/PopUpButton';\r\nimport MainDropdown from '../components/main-dropdown/MainDropdown';\r\nimport EditableTable from '../components/table/EditableTable';\r\nimport Options from '../components/options/Options';\r\nimport { Popconfirm, Space } from 'antd';\r\nimport edit from '../images/edit.svg';\r\nimport deletee from '../images/delete.svg';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nfunction Skills(props) {\r\n  const [countSkill, setCountSkill] = useState(0);\r\n  const [skills, setSkills] = useState();\r\n  const [SkillName, setSkillName] = useState();\r\n  const [resultSkills, setResultSkills] = useState([]);\r\n  const [resultTemp, setResultTemp] = useState([]);\r\n  const [visible2, setVisible2] = useState(false);\r\n\r\n  const columns = [\r\n    {\r\n      title: '#',\r\n      dataIndex: 'id',\r\n      width: '5%',\r\n      // editable: true,\r\n    },\r\n\r\n    {\r\n      title: 'Categories name',\r\n      dataIndex: 'skills',\r\n    },\r\n\r\n    {\r\n      title: 'Skill name',\r\n      dataIndex: 'CategoriesName',\r\n    },\r\n\r\n    {\r\n      title: '',\r\n      dataIndex: 'operation',\r\n      width: '20%',\r\n      render: (_, record) => (\r\n        <Space size=\"large\" style={{ cursor: 'pointer', paddingLeft: `63px` }}>\r\n          <img src={edit} alt=\"edit\" />\r\n          <Popconfirm\r\n            title=\"Sure to delete?\"\r\n            onConfirm={() => handleDeleteSkills(record.key)}\r\n          >\r\n            <img src={deletee} alt=\"delete\" />\r\n          </Popconfirm>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    setResultTemp(resultSkills);\r\n  }, [resultTemp]);\r\n\r\n  const handleDeleteSkills = (id) => {\r\n    setResultSkills(resultSkills.filter((item) => item.id !== id));\r\n    setResultSkills(resultTemp.filter((item) => item.id !== id));\r\n  };\r\n\r\n  const SaveSelectSkills = (value) => {\r\n    setSkills(value);\r\n  };\r\n\r\n  const handleChangeSkills = (event) => {\r\n    setSkillName(event.target.value);\r\n  };\r\n\r\n  const handleOkAddSkills = () => {\r\n    const count2 = countSkill + 1;\r\n    setResultSkills((result) => [\r\n      ...result,\r\n      {\r\n        skills: skills,\r\n        CategoriesName: SkillName,\r\n        key: count2,\r\n        id: count2,\r\n      },\r\n    ]);\r\n    setResultTemp(...resultSkills);\r\n    setCountSkill(count2);\r\n    setVisible2(false);\r\n  };\r\n  const showModalAddJob = () => {\r\n    setVisible2(true);\r\n  };\r\n\r\n  const handleCancelAddJob = () => {\r\n    setVisible2(false);\r\n  };\r\n\r\n  const onChangeS = (value) => {\r\n    const temp = [...resultSkills];\r\n    const results = !value\r\n      ? resultTemp\r\n      : resultTemp.filter((item) =>\r\n          item.skills.toLowerCase().includes(value.toLowerCase())\r\n        );\r\n\r\n    if (value === 'all') {\r\n      setResultSkills(resultTemp);\r\n    } else {\r\n      // setInput(value);\r\n      setResultSkills(results);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Options JobLink=\"Skills\" />\r\n      <PopUpButton\r\n        title=\"Create Skills\"\r\n        selectName=\"Categories Name\"\r\n        Name=\"Skill Name\"\r\n        SkillName={SkillName}\r\n        handleChangeSkills={handleChangeSkills}\r\n        SaveSelectSkills={SaveSelectSkills}\r\n        handleCancelAddJob={handleCancelAddJob}\r\n        showModalAddJob={showModalAddJob}\r\n        visible2={visible2}\r\n        handleOkAddSkills={handleOkAddSkills}\r\n      />\r\n      <MainDropdown onChangeS={onChangeS} />\r\n      <EditableTable\r\n        onChangeS={props.onChangeS}\r\n        result={resultSkills}\r\n        columns={columns}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Skills;\r\n","F:\\nadrec\\src\\pages\\JobApp.js",["202"],"import EditableTable from '../components/table/EditableTable';\r\nimport Options from '../components/options/Options';\r\nimport SearchFilter from '../components/search-filter/SearchFilter';\r\nimport Buttons from '../components/buttons/Buttons';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Popconfirm, Space } from 'antd';\r\nimport edit from '../images/edit.svg';\r\nimport deletee from '../images/delete.svg';\r\n\r\nfunction JobApp(props) {\r\n  var results = '';\r\n  const [result, setResult] = useState([\r\n    {\r\n      key: '0',\r\n      id: '0',\r\n      job: 'Computer Engineer',\r\n      location: 'London',\r\n      skills: 'skill1',\r\n      CategoriesName: 'test1',\r\n      CatName: 'test1',\r\n      Sdate: '2021-02-23',\r\n      Edate: '2023-02-23',\r\n      status: 'Yes',\r\n    },\r\n    {\r\n      key: '1',\r\n      id: '1',\r\n      job: 'Building Engineer',\r\n      skills: 'skill2',\r\n      CatName: 'test1',\r\n      CategoriesName: 'test2',\r\n      location: 'New York',\r\n      Sdate: '2020-03-23',\r\n      Edate: '2022-02-23',\r\n      status: 'Yes',\r\n    },\r\n    {\r\n      key: '2',\r\n      id: '2',\r\n      job: 'UI/UX Designer',\r\n      skills: 'skill3',\r\n      CatName: 'test1',\r\n      CategoriesName: 'test3',\r\n      location: 'Nablus',\r\n      Sdate: '2019-02-25',\r\n      Edate: '2019-10-23',\r\n      status: 'No',\r\n    },\r\n    {\r\n      key: '3',\r\n      id: '3',\r\n      job: 'Civil Engineer',\r\n      skills: 'skill4',\r\n      CatName: 'test1',\r\n      CategoriesName: 'test4',\r\n      location: 'London',\r\n      Sdate: '2021-02-23',\r\n      Edate: '2023-02-23',\r\n      status: 'Yes',\r\n    },\r\n    {\r\n      key: '4',\r\n      id: '4',\r\n      job: 'Electrical Engineer',\r\n      skills: 'skill5',\r\n      CatName: 'test1',\r\n      CategoriesName: 'test5',\r\n      location: 'Palestine',\r\n      Sdate: '2020-06-23',\r\n      Edate: '2020-12-23',\r\n      status: 'No',\r\n    },\r\n  ]);\r\n  const [ModalVisible, setModalVisible] = useState(false);\r\n  const [status, setStatus] = useState();\r\n  const [job, setJob] = useState();\r\n  const [location, setLocation] = useState();\r\n  const [StartDate, setStartDate] = useState();\r\n  const [EndDate, setEndDate] = useState();\r\n  const [resultTemp, setResultTemp] = useState([]);\r\n\r\n  function onChangeStart(date, dateString) {\r\n    setStartDate(dateString);\r\n  }\r\n\r\n  function onChangeEnd(date, dateString) {\r\n    setEndDate(dateString);\r\n  }\r\n  function onChangeLocation(newValue) {\r\n    setLocation(newValue);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setResultTemp(result);\r\n  }, [resultTemp]);\r\n  const onChangeStatus = (value) => {\r\n    setStatus(value);\r\n  };\r\n\r\n  const onChangeJob = (value) => {\r\n    setJob(value);\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    const dataSource2 = [...result];\r\n    setResult(dataSource2.filter((item) => item.id !== id));\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    const result = !value\r\n      ? resultTemp\r\n      : resultTemp.filter(\r\n          (item) =>\r\n            item.location.toLowerCase().includes(value.toLocaleLowerCase()) ||\r\n            item.job.toLowerCase().includes(value.toLocaleLowerCase()) ||\r\n            item.status.toLowerCase().includes(value.toLocaleLowerCase()) ||\r\n            item.job.toLowerCase().includes(value.toLocaleLowerCase())\r\n        );\r\n    setResult(result);\r\n  };\r\n\r\n  const showModal = () => {\r\n    setModalVisible(true);\r\n  };\r\n  /*2020-03-23  2022-02-23*/\r\n  const handleOk = () => {\r\n    if (!StartDate && !EndDate && !location && !job && !status) {\r\n      results = result;\r\n    } else if (!StartDate && !EndDate && location && !job && !status) {\r\n      results = resultTemp.filter((item) =>\r\n        item.location.toLowerCase().includes(location.toLowerCase())\r\n      );\r\n    } else if (!StartDate && EndDate && !location && !job && !status) {\r\n      results = resultTemp.filter((item) => item.Edate <= EndDate);\r\n    } else if (StartDate && !EndDate && !location && !job && !status) {\r\n      results = resultTemp.filter((item) => item.Sdate >= StartDate);\r\n    } else if (StartDate && EndDate && !location && !job && !status) {\r\n      results = resultTemp.filter(\r\n        (item) => item.Sdate > StartDate && item.Edate <= EndDate\r\n      );\r\n    } else if (!StartDate && !EndDate && location && job && !status) {\r\n      results = resultTemp.filter(\r\n        (item) =>\r\n          item.location.toLowerCase().includes(location.toLowerCase()) &&\r\n          item.job.toLowerCase().includes(job.toLowerCase())\r\n      );\r\n    } else if (!StartDate && EndDate && !location && job && !status) {\r\n      results = resultTemp.filter(\r\n        (item) =>\r\n          item.Edate <= EndDate &&\r\n          item.job.toLowerCase().includes(job.toLowerCase())\r\n      );\r\n    } else if (StartDate && !EndDate && !location && job && !status) {\r\n      results = resultTemp.filter(\r\n        (item) =>\r\n          item.Sdate >= StartDate &&\r\n          item.job.toLowerCase().includes(job.toLowerCase())\r\n      );\r\n    } else if (StartDate && EndDate && !location && job && !status) {\r\n      results = resultTemp.filter(\r\n        (item) =>\r\n          item.Sdate >= StartDate &&\r\n          item.Edate <= EndDate &&\r\n          item.job.toLowerCase().includes(job.toLowerCase())\r\n      );\r\n    } else if (!StartDate && !EndDate && !location && job && !status) {\r\n      results = resultTemp.filter((item) =>\r\n        item.job.toLowerCase().includes(job.toLowerCase())\r\n      );\r\n    } else if (!StartDate && !EndDate && !location && !job && status) {\r\n      results = resultTemp.filter((item) =>\r\n        item.status.toLowerCase().includes(status.toLowerCase())\r\n      );\r\n    } else if (!StartDate && !EndDate && !location && job && status) {\r\n      results = resultTemp.filter(\r\n        (item) =>\r\n          item.job.toLowerCase().includes(job.toLowerCase()) &&\r\n          item.status.toLowerCase().includes(status.toLowerCase())\r\n      );\r\n    } else if (!StartDate && !EndDate && location && !job && status) {\r\n      results = resultTemp.filter(\r\n        (item) =>\r\n          item.status.toLowerCase().includes(status.toLowerCase()) &&\r\n          item.location.toLowerCase().includes(location.toLowerCase())\r\n      );\r\n    } else if (!StartDate && !EndDate && location && job && status) {\r\n      results = resultTemp.filter(\r\n        (item) =>\r\n          item.job.toLowerCase().includes(job.toLowerCase()) &&\r\n          item.status.toLowerCase().includes(status.toLowerCase()) &&\r\n          item.location.toLowerCase().includes(location.toLowerCase())\r\n      );\r\n    } else if (!StartDate && EndDate && !location && !job && status) {\r\n      results = resultTemp.filter(\r\n        (item) =>\r\n          item.status.toLowerCase().includes(status.toLowerCase()) &&\r\n          item.Edate <= EndDate\r\n      );\r\n    } else if (!StartDate && EndDate && location && !job && status) {\r\n      results = resultTemp.filter(\r\n        (item) =>\r\n          item.location.toLowerCase().includes(location.toLowerCase()) &&\r\n          item.status.toLowerCase().includes(status.toLowerCase()) &&\r\n          item.Edate <= EndDate\r\n      );\r\n    } else if (!StartDate && EndDate && !location && !job && status) {\r\n      results = resultTemp.filter(\r\n        (item) =>\r\n          item.status.toLowerCase().includes(status.toLowerCase()) &&\r\n          item.Edate <= EndDate\r\n      );\r\n    } else if (!StartDate && EndDate && !location && job && status) {\r\n      results = resultTemp.filter(\r\n        (item) =>\r\n          item.job.toLowerCase().includes(job.toLowerCase()) &&\r\n          item.status.toLowerCase().includes(status.toLowerCase()) &&\r\n          item.Edate <= EndDate\r\n      );\r\n    } else if (StartDate && !EndDate && !location && !job && status) {\r\n      results = resultTemp.filter(\r\n        (item) =>\r\n          item.status.toLowerCase().includes(status.toLowerCase()) &&\r\n          item.Sdate >= StartDate\r\n      );\r\n    } else if (StartDate && !EndDate && location && job && status) {\r\n      results = resultTemp.filter(\r\n        (item) =>\r\n          item.job.toLowerCase().includes(job.toLowerCase()) &&\r\n          item.status.toLowerCase().includes(status.toLowerCase()) &&\r\n          item.location.toLowerCase().includes(location.toLowerCase()) &&\r\n          item.Sdate >= StartDate\r\n      );\r\n    } else if (StartDate && !EndDate && !location && !job && status) {\r\n      results = resultTemp.filter(\r\n        (item) =>\r\n          item.status.toLowerCase().includes(status.toLowerCase()) &&\r\n          item.Sdate >= StartDate\r\n      );\r\n    } else if (StartDate && !EndDate && !location && job && status) {\r\n      results = resultTemp.filter(\r\n        (item) =>\r\n          item.status.toLowerCase().includes(status.toLowerCase()) &&\r\n          item.job.toLowerCase().includes(job.toLowerCase()) &&\r\n          item.Sdate >= StartDate\r\n      );\r\n    } else if (!StartDate && EndDate && location && job && status) {\r\n      results = resultTemp.filter(\r\n        (item) =>\r\n          item.status.toLowerCase().includes(status.toLowerCase()) &&\r\n          item.job.toLowerCase().includes(job.toLowerCase()) &&\r\n          item.location.toLowerCase().includes(location.toLowerCase()) &&\r\n          item.Edate <= EndDate\r\n      );\r\n    } else {\r\n      results = resultTemp.filter(\r\n        (item) =>\r\n          item.Sdate >= StartDate &&\r\n          item.Edate <= EndDate &&\r\n          item.location.toLowerCase().includes(location.toLowerCase()) &&\r\n          item.job.toLowerCase().includes(job.toLowerCase()) &&\r\n          item.status.toLowerCase().includes(status.toLowerCase())\r\n      );\r\n    }\r\n    setResult(results);\r\n    setModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setModalVisible(false);\r\n  };\r\n  const columns = [\r\n    {\r\n      title: '#',\r\n      dataIndex: 'id',\r\n      width: '5%',\r\n      // editable: true,\r\n    },\r\n\r\n    {\r\n      title: 'Job Title',\r\n      dataIndex: 'job',\r\n    },\r\n\r\n    {\r\n      title: 'Job Location',\r\n      dataIndex: 'location',\r\n    },\r\n    {\r\n      title: 'Start Date',\r\n      dataIndex: 'Sdate',\r\n    },\r\n\r\n    {\r\n      title: 'End Date',\r\n      dataIndex: 'Edate',\r\n    },\r\n    {\r\n      title: 'Status',\r\n      dataIndex: 'status',\r\n    },\r\n\r\n    {\r\n      title: '',\r\n      dataIndex: 'operation',\r\n      width: '20%',\r\n      render: (_, record) => (\r\n        <Space size=\"large\" style={{ cursor: 'pointer', paddingLeft: `63px` }}>\r\n          <img src={edit} alt=\"edit\" />\r\n          <Popconfirm\r\n            title=\"Sure to delete?\"\r\n            onConfirm={() => handleDelete(record.key)}\r\n          >\r\n            <img src={deletee} alt=\"delete\" />\r\n          </Popconfirm>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n  return (\r\n    <>\r\n      <Options JobLink=\"Job applications\" />\r\n      <Buttons />\r\n      <div\r\n        style={{\r\n          paddingTop: `107px`,\r\n          marginRight: `20%`,\r\n          marginBottom: `56px`,\r\n        }}\r\n      >\r\n        <SearchFilter onSearch={onSearch} showModal={showModal} />\r\n      </div>\r\n      <EditableTable\r\n        result={result}\r\n        handleOk={handleOk}\r\n        handleCancel={handleCancel}\r\n        ModalVisible={ModalVisible}\r\n        onChangeStatus={onChangeStatus}\r\n        onChangeLocation={onChangeLocation}\r\n        onChangeStart={onChangeStart}\r\n        onChangeEnd={onChangeEnd}\r\n        onChangeJob={onChangeJob}\r\n        handleDelete={handleDelete}\r\n        columns={columns}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default JobApp;\r\n","F:\\nadrec\\src\\pages\\JobCat.js",["203","204"],"import EditableTable from '../components/table/EditableTable';\r\nimport Buttons from '../components/buttons/Buttons';\r\nimport MainDropdown from '../components/main-dropdown/MainDropdown';\r\nimport Options from '../components/options/Options';\r\nimport PopUpButton from '../components/buttons/PopUpButton';\r\nimport { Popconfirm, Space } from 'antd';\r\nimport edit from '../images/edit.svg';\r\nimport deletee from '../images/delete.svg';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nfunction JobCat(props) {\r\n  const [countCat, setCountCat] = useState(0);\r\n  const [resultCatTable, setResultCatTable] = useState([]);\r\n  const [resultTemp, setResultTemp] = useState([]);\r\n  const [CatName, setCatName] = useState('');\r\n  const [visible2, setVisible2] = useState(false);\r\n\r\n  const columns = [\r\n    {\r\n      title: '#',\r\n      dataIndex: 'id',\r\n      width: '5%',\r\n      // editable: true,\r\n    },\r\n\r\n    {\r\n      title: 'Categories Name',\r\n      dataIndex: 'CatName',\r\n    },\r\n\r\n    {\r\n      title: '',\r\n      dataIndex: 'operation',\r\n      width: '20%',\r\n      render: (_, record) => (\r\n        <Space size=\"large\" style={{ cursor: 'pointer', paddingLeft: `63px` }}>\r\n          <img src={edit} alt=\"edit\" />\r\n          <Popconfirm\r\n            title=\"Sure to delete?\"\r\n            onConfirm={() => handleDeleteCat(record.key)}\r\n          >\r\n            <img src={deletee} alt=\"delete\" />\r\n          </Popconfirm>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    setResultTemp(resultCatTable);\r\n  }, [resultTemp]);\r\n\r\n  const handleDeleteCat = (id) => {\r\n    setResultCatTable(resultCatTable.filter((item) => item.id !== id));\r\n    setResultCatTable(resultTemp.filter((item) => item.id !== id));\r\n  };\r\n\r\n  const handleChangeCat = (event) => {\r\n    setCatName(event.target.value);\r\n  };\r\n\r\n  const handleOkAddCat = () => {\r\n    const count2 = countCat + 1;\r\n    setResultCatTable((result) => [\r\n      ...result,\r\n      {\r\n        CatName: CatName,\r\n        key: count2,\r\n        id: count2,\r\n      },\r\n    ]);\r\n    setResultTemp(...resultCatTable);\r\n    setCountCat(count2);\r\n    // console.log(count);\r\n    setVisible2(false);\r\n  };\r\n\r\n  const showModalAddJob = () => {\r\n    setVisible2(true);\r\n  };\r\n\r\n  const handleCancelAddJob = () => {\r\n    setVisible2(false);\r\n  };\r\n\r\n  const onChangeS = (value) => {\r\n    const results = !value\r\n      ? resultTemp\r\n      : resultTemp.filter((item) =>\r\n          item.CatName.toLowerCase().includes(value.toLowerCase())\r\n        );\r\n\r\n    if (value === 'all') {\r\n      setResultCatTable(resultTemp);\r\n    } else {\r\n      // setInput(value);\r\n      setResultCatTable(results);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Options JobLink=\"Job categories\" />\r\n      <PopUpButton\r\n        title=\"Create new categories\"\r\n        Name=\"Categories name\"\r\n        handleCancelAddJob={handleCancelAddJob}\r\n        showModalAddJob={showModalAddJob}\r\n        visible2={visible2}\r\n        handleOkAddCat={handleOkAddCat}\r\n        handleChangeCat={handleChangeCat}\r\n        CatName={props.CatName}\r\n      />\r\n      <MainDropdown onChangeS={onChangeS} />\r\n      <EditableTable result={resultCatTable} columns={columns} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default JobCat;\r\n","F:\\nadrec\\src\\pages\\JobLocation.js",["205","206","207"],"import EditableTable from '../components/table/EditableTable';\r\nimport PopUpButton from '../components/buttons/PopUpButton';\r\nimport MainDropdown from '../components/main-dropdown/MainDropdown';\r\nimport Options from '../components/options/Options';\r\nimport { Popconfirm, Space } from 'antd';\r\nimport edit from '../images/edit.svg';\r\nimport deletee from '../images/delete.svg';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nfunction JobLocation(props) {\r\n  const [countLocation, setCountLocation] = useState(0);\r\n  const [location, setLocation] = useState();\r\n  const [jobLocation, setJobLocation] = useState();\r\n  const [jobName, setJobName] = useState('');\r\n  const [resultLocationTable, setResultLocationTable] = useState([]);\r\n  const [resultTempLocation, setResultTempLocation] = useState([]);\r\n  const [visible2, setVisible2] = useState(false);\r\n\r\n  const columns = [\r\n    {\r\n      title: '#',\r\n      dataIndex: 'id',\r\n      width: '5%',\r\n      // editable: true,\r\n    },\r\n\r\n    {\r\n      title: 'Name',\r\n      dataIndex: 'title',\r\n    },\r\n\r\n    {\r\n      title: 'Location',\r\n      dataIndex: 'location',\r\n    },\r\n\r\n    {\r\n      title: '',\r\n      dataIndex: 'operation',\r\n      width: '20%',\r\n      render: (_, record) => (\r\n        <Space size=\"large\" style={{ cursor: 'pointer', paddingLeft: `63px` }}>\r\n          <img src={edit} alt=\"edit\" />\r\n          <Popconfirm\r\n            title=\"Sure to delete?\"\r\n            onConfirm={() => handleDeleteLocations(record.key)}\r\n          >\r\n            <img src={deletee} alt=\"delete\" />\r\n          </Popconfirm>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    setResultTempLocation(resultLocationTable);\r\n  }, [resultTempLocation]);\r\n\r\n  const onChangeLocation = (value) => {\r\n    setLocation(value);\r\n  };\r\n  const handleDeleteLocations = (id) => {\r\n    const dataSource2 = [...resultLocationTable];\r\n    setResultLocationTable(dataSource2.filter((item) => item.id !== id));\r\n    setResultTempLocation(dataSource2.filter((item) => item.id !== id));\r\n  };\r\n\r\n  const SaveSelectLocation = (value) => {\r\n    setJobLocation(value);\r\n  };\r\n\r\n  const handleChangeLocation = (event) => {\r\n    setJobName(event.target.value);\r\n  };\r\n\r\n  const handleOkAddJob = () => {\r\n    const count2 = countLocation + 1;\r\n    setResultLocationTable((result) => [\r\n      ...result,\r\n      {\r\n        title: jobName,\r\n        location: jobLocation,\r\n        key: count2,\r\n        id: count2,\r\n      },\r\n    ]);\r\n    setResultTempLocation(...resultLocationTable);\r\n    setCountLocation(count2);\r\n    // console.log(count);\r\n    setVisible2(false);\r\n  };\r\n\r\n  const showModalAddJob = () => {\r\n    setVisible2(true);\r\n  };\r\n\r\n  const handleCancelAddJob = () => {\r\n    setVisible2(false);\r\n  };\r\n\r\n  const onChangeS = (value) => {\r\n    const results = !value\r\n      ? resultTempLocation\r\n      : resultTempLocation.filter((item) =>\r\n          item.location.toLowerCase().includes(value.toLowerCase())\r\n        );\r\n\r\n    if (value === 'all') {\r\n      setResultLocationTable(resultTempLocation);\r\n    } else {\r\n      // setInput(value);\r\n      setResultLocationTable(results);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Options JobLink=\"Job Locations\" />\r\n      <PopUpButton\r\n        title=\"Locations\"\r\n        Name=\"Job location name\"\r\n        selectName=\"Country\"\r\n        SaveSelectLocation={SaveSelectLocation}\r\n        jobLocation={jobName}\r\n        handleChangeLocation={handleChangeLocation}\r\n        handleOkAddJob={handleOkAddJob}\r\n        handleCancelAddJob={handleCancelAddJob}\r\n        showModalAddJob={showModalAddJob}\r\n        visible2={visible2}\r\n      />\r\n      <MainDropdown onChangeS={onChangeS} />\r\n      <EditableTable result={resultLocationTable} columns={columns} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default JobLocation;\r\n","F:\\nadrec\\src\\pages\\JobTable.js",["208","209"],"import EditableTable from '../components/table/EditableTable';\r\nimport Buttons from '../components/buttons/Buttons';\r\nimport MainDropdown from '../components/main-dropdown/MainDropdown';\r\nimport Options from '../components/options/Options';\r\nimport { Popconfirm, Space } from 'antd';\r\nimport edit from '../images/edit.svg';\r\nimport deletee from '../images/delete.svg';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nfunction JobTable(props) {\r\n  const [result, setResult] = useState([]);\r\n  const [dataSource, setDataSource] = useState([\r\n    {\r\n      key: '0',\r\n      id: '0',\r\n      title: '32',\r\n      location: 'London',\r\n      skills: 'skill1',\r\n      CategoriesName: 'test1',\r\n      CatName: 'test1',\r\n      Sdate: '2021-02-23',\r\n      Edate: '2023-02-23',\r\n      status: 'Yes',\r\n    },\r\n    {\r\n      key: '1',\r\n      id: '1',\r\n      title: '33',\r\n      skills: 'skill2',\r\n      CatName: 'test1',\r\n      CategoriesName: 'test2',\r\n      location: 'New York',\r\n      Sdate: '2020-03-23',\r\n      Edate: '2022-02-23',\r\n      status: 'Yes',\r\n    },\r\n    {\r\n      key: '2',\r\n      id: '2',\r\n      title: '34',\r\n      skills: 'skill3',\r\n      CatName: 'test1',\r\n      CategoriesName: 'test3',\r\n      location: 'Nablus',\r\n      Sdate: '2019-02-25',\r\n      Edate: '2019-10-23',\r\n      status: 'No',\r\n    },\r\n    {\r\n      key: '3',\r\n      id: '3',\r\n      title: '35',\r\n      skills: 'skill4',\r\n      CatName: 'test1',\r\n      CategoriesName: 'test4',\r\n      location: 'London',\r\n      Sdate: '2021-02-23',\r\n      Edate: '2023-02-23',\r\n      status: 'Yes',\r\n    },\r\n    {\r\n      key: '4',\r\n      id: '4',\r\n      title: '36',\r\n      skills: 'skill5',\r\n      CatName: 'test1',\r\n      CategoriesName: 'test5',\r\n      location: 'Palestine',\r\n      Sdate: '2020-06-23',\r\n      Edate: '2020-12-23',\r\n      status: 'No',\r\n    },\r\n  ]);\r\n  const columns = [\r\n    {\r\n      title: '#',\r\n      dataIndex: 'id',\r\n      width: '5%',\r\n      // editable: true,\r\n    },\r\n\r\n    {\r\n      title: 'Job Location',\r\n      dataIndex: 'location',\r\n    },\r\n\r\n    {\r\n      title: 'Start Date',\r\n      dataIndex: 'Sdate',\r\n    },\r\n\r\n    {\r\n      title: 'End Date',\r\n      dataIndex: 'Edate',\r\n    },\r\n\r\n    {\r\n      title: 'Status',\r\n      dataIndex: 'status',\r\n    },\r\n\r\n    {\r\n      title: '',\r\n      dataIndex: 'operation',\r\n      width: '20%',\r\n      render: (_, record) => (\r\n        <Space size=\"large\" style={{ cursor: 'pointer', paddingLeft: `63px` }}>\r\n          <img src={edit} alt=\"edit\" />\r\n          <Popconfirm\r\n            title=\"Sure to delete?\"\r\n            onConfirm={() => props.handleDelete(record.key)}\r\n          >\r\n            <img src={deletee} alt=\"delete\" />\r\n          </Popconfirm>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    setResult(dataSource);\r\n  }, []);\r\n\r\n  const handleDelete = (id) => {\r\n    const dataSource2 = [...result];\r\n    setResult(dataSource2.filter((item) => item.id !== id));\r\n  };\r\n\r\n  const onChangeS = (value) => {\r\n    console.log(value);\r\n    const results = !value\r\n      ? dataSource\r\n      : dataSource.filter(\r\n          (item) =>\r\n            item.location.toLowerCase().includes(value.toLowerCase()) ||\r\n            item.skills.toLowerCase().includes(value.toLowerCase()) ||\r\n            item.CatName.toLowerCase().includes(value.toLowerCase())\r\n        );\r\n\r\n    if (value === 'all') {\r\n      setResult(dataSource);\r\n    } else {\r\n      setResult(results);\r\n    }\r\n    console.log(results);\r\n    console.log(result);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Options jobTitleT=\"Job Title\" />\r\n      <Buttons />\r\n      <MainDropdown onChangeS={onChangeS} />\r\n      <EditableTable\r\n        jobTitle=\"title\"\r\n        dataSource={dataSource}\r\n        result={result}\r\n        handleDelete={handleDelete}\r\n        columns={columns}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default JobTable;\r\n","F:\\nadrec\\src\\components\\Modal\\Modall.js",["210","211"],"import { Input, Modal, Select, Col, Row, DatePicker } from 'antd';\r\n\r\nfunction Modall(props) {\r\n  const { Option } = Select;\r\n  const { Search } = Input;\r\n  function onChange(date, dateString) {\r\n    console.log(date, dateString);\r\n  }\r\n  return (\r\n    <>\r\n      <Modal\r\n        title=\"Filter By\"\r\n        visible={props.visible}\r\n        onOk={props.onOk}\r\n        onCancel={props.onCancel}\r\n      >\r\n        <Row gutter={[0, 16]}>\r\n          <Col\r\n            xs={{ span: 7, offset: 1 }}\r\n            sm={{ span: 6, offset: 1 }}\r\n            md={{ span: 7, offset: 1 }}\r\n            lg={{ span: 7, offset: 1 }}\r\n          >\r\n            {/* <Input type=\"text \" placeholder=\"Show result from\" /> */}\r\n            <DatePicker\r\n              placeholder=\"Show result from\"\r\n              onChange={props.onChangeStart}\r\n            />\r\n          </Col>\r\n\r\n          <Col\r\n            xs={{ span: 7, offset: 1 }}\r\n            sm={{ span: 6, offset: 1 }}\r\n            md={{ span: 7, offset: 1 }}\r\n            lg={{ span: 7, offset: 1 }}\r\n          >\r\n            <DatePicker\r\n              placeholder=\"Show result to\"\r\n              onChange={props.onChangeEnd}\r\n            />\r\n          </Col>\r\n\r\n          <Col\r\n            xs={{ span: 7, offset: 1 }}\r\n            sm={{ span: 6, offset: 1 }}\r\n            md={{ span: 7, offset: 1 }}\r\n            lg={{ span: 7, offset: 1 }}\r\n          >\r\n            <Select\r\n              showSearch\r\n              id={'select'}\r\n              key=\"status\"\r\n              style={{\r\n                width: `100%`,\r\n              }}\r\n              placeholder=\"All status \"\r\n              onChange={props.onChangeStatus}\r\n            >\r\n              <Option value=\"all\">All</Option>\r\n              <Option value=\"yes\" key=\"status\">\r\n                Yes\r\n              </Option>\r\n              <Option value=\"Yes\">Yes</Option>\r\n              <Option value=\"no\">No</Option>\r\n            </Select>\r\n          </Col>\r\n          <Col\r\n            xs={{ span: 7, offset: 1 }}\r\n            sm={{ span: 6, offset: 1 }}\r\n            md={{ span: 7, offset: 1 }}\r\n            lg={{ span: 7, offset: 1 }}\r\n          >\r\n            <Select\r\n              style={{\r\n                width: `100%`,\r\n              }}\r\n              placeholder=\"All locations \"\r\n              onChange={props.onChangeLocation}\r\n            >\r\n              <Option value=\"all\">All</Option>\r\n              <Option value=\"New York\">New York</Option>\r\n              <Option value=\"London\">London</Option>\r\n              <Option value=\"Palestine\">Palestine</Option>\r\n              <Option value=\"Nablus\">Nablus</Option>\r\n            </Select>\r\n          </Col>\r\n\r\n          <Col\r\n            xs={{ span: 7, offset: 1 }}\r\n            sm={{ span: 6, offset: 1 }}\r\n            md={{ span: 7, offset: 1 }}\r\n            lg={{ span: 7, offset: 1 }}\r\n          >\r\n            <Select\r\n              style={{\r\n                width: `100%`,\r\n              }}\r\n              placeholder=\"skills \"\r\n              onChange={props.onChangeS}\r\n            >\r\n              <Option value=\"all\">All</Option>\r\n              <Option value=\"New York\">yes</Option>\r\n              <Option value=\"London\">no</Option>\r\n            </Select>\r\n          </Col>\r\n\r\n          <Col\r\n            xs={{ span: 7, offset: 1 }}\r\n            sm={{ span: 6, offset: 1 }}\r\n            md={{ span: 7, offset: 1 }}\r\n            lg={{ span: 7, offset: 1 }}\r\n          >\r\n            <Select\r\n              style={{\r\n                width: `100%`,\r\n              }}\r\n              placeholder=\"All job \"\r\n              onChange={props.onChangeJob}\r\n            >\r\n              <Option value=\"Computer Engineer\">Computer Engineer</Option>\r\n              <Option value=\"UI/UX Designer\">UI/UX Designer</Option>\r\n              <Option value=\"Electrical Engineer\">Electrical Engineer</Option>\r\n              <Option value=\"Civil Engineer\">Civil Engineer</Option>\r\n              <Option value=\"Building Engineer\">Building Engineer</Option>\r\n            </Select>\r\n          </Col>\r\n        </Row>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Modall;\r\n","F:\\nadrec\\src\\components\\main-dropdown\\MainDropdown.js",[],"F:\\nadrec\\src\\components\\search-filter\\SearchFilter.js",[],"F:\\nadrec\\src\\components\\options\\Options.js",[],"F:\\nadrec\\src\\components\\AddNew-Popup\\AddNew.js",["212"],"import { Modal, Select, Button, Input } from 'antd';\r\nimport { useState } from 'react';\r\nimport './style-addNew.css';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nfunction AddNew(props) {\r\n  const { Option } = Select;\r\n  const location = useLocation();\r\n  return (\r\n    <>\r\n      {location.pathname === '/Skills' && (\r\n        <Modal\r\n          visible={props.visible}\r\n          title={props.title}\r\n          onOk={props.handleOkAddSkills}\r\n          onCancel={props.handleCancel}\r\n          width=\"330px\"\r\n          footer={[\r\n            <Button key=\"back\" onClick={props.handleCancel}>\r\n              Close\r\n            </Button>,\r\n            <Button\r\n              key=\"submit\"\r\n              type=\"primary\"\r\n              onClick={props.handleOkAddSkills}\r\n            >\r\n              Add\r\n            </Button>,\r\n          ]}\r\n        >\r\n          <Select\r\n            className=\"AddNew-Popup\"\r\n            showSearch\r\n            style={{\r\n              width: `80%`,\r\n              marginLeft: `13%`,\r\n            }}\r\n            placeholder={props.selectName}\r\n            onChange={props.SaveSelectSkills}\r\n          >\r\n            <Option value=\"skill1\">skill1</Option>\r\n            <Option value=\"skill2\">skill2</Option>\r\n            <Option value=\"skill3\">skill3</Option>\r\n            <Option value=\"skill4\">skill4</Option>\r\n          </Select>\r\n\r\n          <Input\r\n            className=\"AddNew-Input\"\r\n            type=\"text\"\r\n            placeholder={props.Name}\r\n            value={props.SkillName}\r\n            onChange={props.handleChangeSkills}\r\n            style={{ marginTop: '22px', width: `80%`, marginLeft: `13%` }}\r\n          />\r\n        </Modal>\r\n      )}\r\n\r\n      {location.pathname === '/JobLocations' && (\r\n        <Modal\r\n          visible={props.visible}\r\n          title={props.title}\r\n          onOk={props.handleOkAddSkills}\r\n          onCancel={props.handleCancel}\r\n          width=\"330px\"\r\n          footer={[\r\n            <Button key=\"back\" onClick={props.handleCancel}>\r\n              Close\r\n            </Button>,\r\n            <Button key=\"submit\" type=\"primary\" onClick={props.handleOk}>\r\n              Add\r\n            </Button>,\r\n          ]}\r\n        >\r\n          <Select\r\n            className=\"AddNew-Popup\"\r\n            showSearch\r\n            style={{\r\n              width: `80%`,\r\n              marginLeft: `13%`,\r\n            }}\r\n            placeholder={props.selectName}\r\n            onChange={props.SaveSelectLocation}\r\n          >\r\n            <Option value=\"New York\">New York</Option>\r\n            <Option value=\"London\">London</Option>\r\n            <Option value=\"Palestine\">Palestine</Option>\r\n            <Option value=\"Nablus\">Nablus</Option>\r\n          </Select>\r\n          <Input\r\n            className=\"AddNew-Input\"\r\n            type=\"text\"\r\n            placeholder={props.Name}\r\n            value={props.jobName}\r\n            onChange={props.handleChangeLocation}\r\n            style={{ marginTop: '22px', width: `80%`, marginLeft: `13%` }}\r\n          />\r\n        </Modal>\r\n      )}\r\n\r\n      {location.pathname === '/JobCategories' && (\r\n        <Modal\r\n          visible={props.visible}\r\n          title={props.title}\r\n          onOk={props.handleOkAddSkills}\r\n          onCancel={props.handleCancel}\r\n          width=\"330px\"\r\n          footer={[\r\n            <Button key=\"back\" onClick={props.handleCancel}>\r\n              Close\r\n            </Button>,\r\n            <Button key=\"submit\" type=\"primary\" onClick={props.handleOkAddCat}>\r\n              Add\r\n            </Button>,\r\n          ]}\r\n        >\r\n          <Input\r\n            className=\"AddNew-Input\"\r\n            type=\"text\"\r\n            placeholder={props.Name}\r\n            value={props.CatName}\r\n            onChange={props.handleChangeCat}\r\n            style={{ width: `80%`, marginLeft: `13%` }}\r\n          />\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddNew;\r\n","F:\\nadrec\\src\\components\\buttons\\PopUpButton.js",[],"F:\\nadrec\\src\\components\\job-opening\\jobOpening.js",["213","214"],"F:\\nadrec\\src\\components\\job-opening\\JobOpening.js",["215"],"import { Input, Col, Row } from 'antd';\r\nimport ModallJob from '../job-opening/ModalJob';\r\nimport filter from '../../images/filter.png';\r\nimport './styleJobOpening.css';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nfunction JobOpening(props) {\r\n  const { Search } = Input;\r\n  const [ModalVisible, setModalVisible] = useState(false);\r\n  const showModal = () => {\r\n    setModalVisible(true);\r\n  };\r\n  const handleOk = () => {\r\n    setModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setModalVisible(false);\r\n  };\r\n  return (\r\n    <div className=\"jopOpenings-body\">\r\n      <div className=\"jopOpenings-header\">\r\n        <h3>Job openings</h3>\r\n      </div>\r\n\r\n      <Row gutter={[0, 16]}>\r\n        <Col\r\n          xs={{ span: 20, offset: 1 }}\r\n          sm={{ span: 22, offset: 2 }}\r\n          md={{ span: 20, offset: 3 }}\r\n          lg={{ span: 14, offset: 5 }}\r\n        >\r\n          <div className=\"jopOpenings-title\">\r\n            <p>\r\n              <span className=\"jopOpening-welcome\">Welcome!</span> <br />{' '}\r\n              <bold style={{ float: `left` }}>\r\n                We want people to thrive. We believe you do your best work when\r\n                you feel your best.\r\n              </bold>\r\n            </p>\r\n          </div>\r\n        </Col>\r\n        <Col\r\n          xs={{ span: 20, offset: 1 }}\r\n          sm={{ span: 22, offset: 2 }}\r\n          md={{ span: 20, offset: 3 }}\r\n          lg={{ span: 19, offset: 2 }}\r\n        >\r\n          <Search\r\n            placeholder=\"input search text\"\r\n            onSearch={props.onSearch}\r\n            bordered={false}\r\n            style={{\r\n              width: `60%`,\r\n              boxShadow: `0px 3px 30px #00000029`,\r\n              paddingTop: '8px',\r\n              paddingBottom: '7px',\r\n              background: `white`,\r\n              borderRadius: '15px',\r\n              marginBottom: `43px`,\r\n            }}\r\n            className=\"job-search jobOpenings\"\r\n          />\r\n\r\n          <div\r\n            style={{\r\n              width: `43px`,\r\n              background: `#509EFC`,\r\n              borderRadius: `10px`,\r\n              cursor: `pointer`,\r\n              display: `inline-block`,\r\n              marginLeft: `2%`,\r\n              height: `41px`,\r\n              marginTop: `4px`,\r\n            }}\r\n            onClick={showModal}\r\n          >\r\n            <img\r\n              src={filter}\r\n              style={{ width: `80%`, paddingTop: `1vh` }}\r\n              alt=\"icon-filter\"\r\n            />\r\n          </div>\r\n        </Col>\r\n\r\n        <Col\r\n          xs={{ span: 20, offset: 1 }}\r\n          sm={{ span: 22, offset: 2 }}\r\n          md={{ span: 20, offset: 3 }}\r\n          lg={{ span: 13, offset: 5 }}\r\n        >\r\n          <div className=\"jobOpenings-result\">\r\n            <p>\r\n              <bold className=\"jobOpenings-jobs\">Senior UI/UX Developer</bold>{' '}\r\n              <bold className=\"jobOpenings-jobs2\">\r\n                {' '}\r\n                ,Nablus- Rafidia branch\r\n              </bold>{' '}\r\n              <bold className=\"jobOpenings-jobs3\">Today</bold>\r\n            </p>\r\n          </div>\r\n        </Col>\r\n        <Col\r\n          xs={{ span: 20, offset: 1 }}\r\n          sm={{ span: 22, offset: 2 }}\r\n          md={{ span: 20, offset: 3 }}\r\n          lg={{ span: 13, offset: 5 }}\r\n        >\r\n          <div className=\"jobOpenings-result\">\r\n            <p>\r\n              <bold className=\"jobOpenings-jobs\">Senior UI/UX Developer</bold>{' '}\r\n              <bold className=\"jobOpenings-jobs2\">\r\n                {' '}\r\n                ,Nablus- Rafidia branch\r\n              </bold>{' '}\r\n              <bold className=\"jobOpenings-jobs3\">Today</bold>\r\n            </p>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n\r\n      <ModallJob\r\n        visible={ModalVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JobOpening;\r\n","F:\\nadrec\\src\\components\\job-opening\\ModalJob.js",["216","217"],"import { Input, Modal, Select, Col, Row, DatePicker } from 'antd';\r\n\r\nfunction ModalJob(props) {\r\n  const { Option } = Select;\r\n  const { Search } = Input;\r\n  function onChange(date, dateString) {\r\n    console.log(date, dateString);\r\n  }\r\n  return (\r\n    <>\r\n      <Modal\r\n        title=\"Filter By\"\r\n        visible={props.visible}\r\n        onOk={props.onOk}\r\n        onCancel={props.onCancel}\r\n      >\r\n        <Row gutter={[0, 16]}>\r\n          <Col\r\n            xs={{ span: 7, offset: 1 }}\r\n            sm={{ span: 6, offset: 1 }}\r\n            md={{ span: 7, offset: 1 }}\r\n            lg={{ span: 7, offset: 1 }}\r\n          >\r\n            {/* <Input type=\"text \" placeholder=\"Show result from\" /> */}\r\n            <DatePicker\r\n              placeholder=\"Show result from\"\r\n              onChange={props.onChangeStart}\r\n            />\r\n          </Col>\r\n\r\n          <Col\r\n            xs={{ span: 7, offset: 1 }}\r\n            sm={{ span: 6, offset: 1 }}\r\n            md={{ span: 7, offset: 1 }}\r\n            lg={{ span: 7, offset: 1 }}\r\n          >\r\n            <Select\r\n              style={{\r\n                width: `100%`,\r\n              }}\r\n              placeholder=\"All locations \"\r\n              onChange={props.onChangeLocation}\r\n            >\r\n              <Option value=\"all\">All</Option>\r\n              <Option value=\"New York\">New York</Option>\r\n              <Option value=\"London\">London</Option>\r\n              <Option value=\"Palestine\">Palestine</Option>\r\n              <Option value=\"Nablus\">Nablus</Option>\r\n            </Select>\r\n          </Col>\r\n\r\n          <Col\r\n            xs={{ span: 7, offset: 1 }}\r\n            sm={{ span: 6, offset: 1 }}\r\n            md={{ span: 7, offset: 1 }}\r\n            lg={{ span: 7, offset: 1 }}\r\n          >\r\n            <Select\r\n              showSearch\r\n              style={{\r\n                width: `100%`,\r\n              }}\r\n              placeholder=\"All job \"\r\n              optionFilterProp=\"children\"\r\n              onChange={props.onChangeS}\r\n              filterOption={(input, option) =>\r\n                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n              }\r\n            >\r\n              <Option value=\"all\">All</Option>\r\n              <Option value=\"New York\">yes</Option>\r\n              <Option value=\"London\">no</Option>\r\n            </Select>\r\n          </Col>\r\n        </Row>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ModalJob;\r\n","F:\\nadrec\\src\\components\\jobs-Details\\JobDetails.js",[],"F:\\nadrec\\src\\components\\job-apply-form\\ApplyForm.js",[],"F:\\nadrec\\src\\components\\drag-and-drop\\DragDrop.js",["218","219","220","221","222"],"import React, { useState, useEffect } from 'react';\r\nimport { Col, Row } from 'antd';\r\nimport './style-dragDrop.css';\r\n\r\nexport default function DragDrop(props) {\r\n  var Newtasks = {\r\n    Applied: [],\r\n    Phone: [],\r\n    Interview: [],\r\n    Hired: [],\r\n  };\r\n\r\n  var countApplied1 = 0;\r\n  var countPhone2 = 0;\r\n  var countInterview3 = 0;\r\n  var countHired4 = 0;\r\n  const [countApplied, setCountApplied] = useState();\r\n  const [countPhone, setCountPhone] = useState();\r\n  const [countIntreview, setCountInterview] = useState();\r\n  const [countHired, setCountHired] = useState();\r\n\r\n  useEffect(() => {\r\n    props.tasks.map((a) => {\r\n      if (a.category === 'Applied') {\r\n        countApplied1 = countApplied1 + 1;\r\n      } else if (a.category === 'Phone') {\r\n        countPhone2 = countPhone2 + 1;\r\n      } else if (a.category === 'Interview') {\r\n        countInterview3 = countInterview3 + 1;\r\n      } else if (a.category === 'Hired') {\r\n        countHired4 = countHired4 + 1;\r\n      }\r\n    });\r\n    setCountApplied(countApplied1);\r\n    setCountPhone(countPhone2);\r\n    setCountInterview(countInterview3);\r\n    setCountHired(countHired4);\r\n  }, [props.tasks]);\r\n\r\n  props.tasks.forEach((t) => {\r\n    Newtasks[t.category].push(\r\n      <Row\r\n        gutter={[0, 8]}\r\n        style={{ paddingTop: `14px`, cursor: `pointer` }}\r\n        key={t.id}\r\n        draggable\r\n        onDragStart={(e) => props.onDragStart(e, t.id)}\r\n      >\r\n        <Col\r\n          xs={{ span: 24, offset: 0 }}\r\n          sm={{ span: 24, offset: 0 }}\r\n          md={{ span: 24, offset: 0 }}\r\n          lg={{ span: 24, offset: 0 }}\r\n        >\r\n          <div className=\"DragDrop-cards\">\r\n            <div>\r\n              <div className=\"DragDrop-cards-title\">\r\n                <div className=\"DragDrop-WhiteBox\"></div>\r\n                <span>{t.name}</span>\r\n                <br />\r\n                <p>{t.special}</p>\r\n              </div>\r\n              <div className=\"DragDrop-CardDetails\">\r\n                <span>Interviewer : {t.Interviewer}</span>\r\n                <br />\r\n                <span>Applied date: {t.AppliedDate}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Row gutter={[0, 8]} style={{ paddingTop: `30px` }}>\r\n        <Col\r\n          xs={{ span: 10, offset: 1 }}\r\n          sm={{ span: 10, offset: 1 }}\r\n          md={{ span: 5, offset: 1 }}\r\n          lg={{ span: 5, offset: 1 }}\r\n          onDragOver={(e) => props.onDragOver(e)}\r\n          onDrop={(e) => props.onDrop(e, 'Applied')}\r\n        >\r\n          <div className=\"DragDrop-title\">\r\n            <div>\r\n              <h5>Applied</h5>\r\n              <div className=\"DragDrop-BlueBox\">{countApplied}</div>\r\n            </div>\r\n          </div>\r\n\r\n          {Newtasks.Applied}\r\n        </Col>\r\n\r\n        <Col\r\n          xs={{ span: 10, offset: 1 }}\r\n          sm={{ span: 10, offset: 1 }}\r\n          md={{ span: 5, offset: 0 }}\r\n          lg={{ span: 5, offset: 0 }}\r\n          className=\"DragDrop-col\"\r\n          onDragOver={(e) => props.onDragOver(e)}\r\n          onDrop={(e) => props.onDrop(e, 'Phone')}\r\n        >\r\n          <div className=\"DragDrop-title\">\r\n            <div>\r\n              <h5>Phone Screen</h5>\r\n              <div className=\"DragDrop-BlueBox\">{countPhone}</div>\r\n            </div>\r\n          </div>\r\n          {Newtasks.Phone}\r\n        </Col>\r\n\r\n        <Col\r\n          xs={{ span: 10, offset: 1 }}\r\n          sm={{ span: 10, offset: 1 }}\r\n          md={{ span: 6, offset: 0 }}\r\n          lg={{ span: 5, offset: 0 }}\r\n          className=\"DragDrop-col\"\r\n          onDragOver={(e) => props.onDragOver(e)}\r\n          onDrop={(e) => props.onDrop(e, 'Interview')}\r\n        >\r\n          <div className=\"DragDrop-title\">\r\n            <div>\r\n              <h5>Interview</h5>\r\n              <div className=\"DragDrop-BlueBox\">{countIntreview}</div>\r\n            </div>\r\n          </div>\r\n          {Newtasks.Interview}\r\n        </Col>\r\n\r\n        <Col\r\n          xs={{ span: 10, offset: 1 }}\r\n          sm={{ span: 10, offset: 1 }}\r\n          md={{ span: 5, offset: 0 }}\r\n          lg={{ span: 5, offset: 0 }}\r\n          className=\"DragDrop-col\"\r\n          onDragOver={(e) => props.onDragOver(e)}\r\n          onDrop={(e) => props.onDrop(e, 'Hired')}\r\n        >\r\n          <div className=\"DragDrop-title\">\r\n            <div>\r\n              <h5>Hired</h5>\r\n              <div className=\"DragDrop-BlueBox\">{countHired}</div>\r\n            </div>\r\n          </div>\r\n          {Newtasks.Hired}\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n","F:\\nadrec\\src\\pages\\JobBoard.js",["223"],"import JobBoardCom from '../components/job-boardCom/JobBoardCom';\r\nimport React, { useState, useEffect } from 'react';\r\nimport DragDrop from '../components/drag-and-drop/DragDrop';\r\n\r\nfunction JobBoard(props) {\r\n  var results = '';\r\n  const [job, setJob] = useState();\r\n  const [StartDate, setStartDate] = useState();\r\n  const [EndDate, setEndDate] = useState();\r\n  const [resultTemp, setResultTemp] = useState([]);\r\n  const [tasks, setTasks] = useState([\r\n    {\r\n      id: '1',\r\n      name: 'Shahd Bourini',\r\n      special: 'computer Engineer',\r\n      Interviewer: 'AhmAd M, Mosab A',\r\n      AppliedDate: '2021-12-13',\r\n      category: 'Applied',\r\n    },\r\n    {\r\n      id: '2',\r\n      name: 'ShBourini',\r\n      special: 'IT',\r\n      Interviewer: 'AhmAd M, Mosab A',\r\n      AppliedDate: '2021-12-12',\r\n      category: 'Applied',\r\n    },\r\n    {\r\n      id: '3',\r\n      name: 'Shahd',\r\n      special: 'UI/UX Developer',\r\n      Interviewer: 'AhmAd M, Mosab A',\r\n      AppliedDate: '2020-06-06',\r\n      category: 'Interview',\r\n    },\r\n    {\r\n      id: '4',\r\n      name: 'Shahd Bourini',\r\n      special: 'computer Engineer',\r\n      Interviewer: 'AhmAd M, Mosab A',\r\n      AppliedDate: '2021-03-07',\r\n      category: 'Phone',\r\n    },\r\n    {\r\n      id: '5',\r\n      name: 'Shahd Al-Bourini',\r\n      special: 'IT',\r\n      Interviewer: 'AhmAd M, Mosab A',\r\n      AppliedDate: '2021-12-11',\r\n      category: 'Hired',\r\n    },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    setResultTemp(tasks);\r\n  }, [resultTemp]);\r\n\r\n  const onDragStart = (ev, id) => {\r\n    ev.dataTransfer.setData('id', id);\r\n  };\r\n\r\n  const onDragOver = (ev) => {\r\n    ev.preventDefault();\r\n  };\r\n\r\n  const onDrop = (ev, cat) => {\r\n    let id = ev.dataTransfer.getData('id');\r\n\r\n    let tasksNew = tasks.filter((task) => {\r\n      if (task.id === id) {\r\n        task.category = cat;\r\n      }\r\n      return task;\r\n    });\r\n    setTasks(tasksNew);\r\n  };\r\n\r\n  const selectResult = (item) => {\r\n    setJob(item);\r\n  };\r\n\r\n  function onChangeStart(date, dateString) {\r\n    console.log(date, dateString);\r\n    setStartDate(dateString);\r\n  }\r\n\r\n  function onChangeEnd(date, dateString) {\r\n    setEndDate(dateString);\r\n  }\r\n\r\n  const applyFilter = () => {\r\n    if (!StartDate && !EndDate && !job) {\r\n      results = resultTemp;\r\n    } else if (!StartDate && !EndDate && job) {\r\n      results = resultTemp.filter((item) =>\r\n        item.special.toLowerCase().includes(job.toLowerCase())\r\n      );\r\n    } else if (!StartDate && EndDate && !job) {\r\n      results = resultTemp.filter((item) => item.AppliedDate <= EndDate);\r\n    } else if (StartDate && !EndDate && !job) {\r\n      results = resultTemp.filter((item) => item.AppliedDate >= StartDate);\r\n    } else if (StartDate && EndDate && !job) {\r\n      results = resultTemp.filter(\r\n        (item) => item.AppliedDate >= StartDate && item.AppliedDate <= EndDate\r\n      );\r\n    } else {\r\n      results = resultTemp.filter(\r\n        (item) =>\r\n          item.AppliedDate >= StartDate &&\r\n          item.AppliedDate <= EndDate &&\r\n          item.special.toLowerCase().includes(job.toLowerCase())\r\n      );\r\n    }\r\n    setTasks(results);\r\n  };\r\n\r\n  const resetFilter = () => {\r\n    setTasks(resultTemp);\r\n    setJob('');\r\n    setStartDate('');\r\n    setEndDate('');\r\n  };\r\n  return (\r\n    <>\r\n      <JobBoardCom\r\n        onChangeStart={onChangeStart}\r\n        StartDate={StartDate}\r\n        onChangeEnd={onChangeEnd}\r\n        selectResult={selectResult}\r\n        job={job}\r\n        applyFilter={applyFilter}\r\n        resetFilter={resetFilter}\r\n        tasks={tasks}\r\n        onDragStart={onDragStart}\r\n      />\r\n      <DragDrop\r\n        tasks={tasks}\r\n        onDragStart={onDragStart}\r\n        onDragOver={onDragOver}\r\n        onDrop={onDrop}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default JobBoard;\r\n","F:\\nadrec\\src\\components\\job-boardCom\\JobBoardCom.js",["224"],"import { Input, DatePicker, Button, Select, Col, Row } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport './style-jobBoard.css';\r\n\r\nfunction JobBoardCom(props) {\r\n  const { Option } = Select;\r\n  return (\r\n    <>\r\n      <Row gutter={[0, 8]} style={{ paddingTop: `30px` }}>\r\n        <Col\r\n          xs={{ span: 7, offset: 1 }}\r\n          sm={{ span: 7, offset: 1 }}\r\n          md={{ span: 4, offset: 1 }}\r\n          lg={{ span: 4, offset: 1 }}\r\n        >\r\n          <DatePicker\r\n            placeholder=\"Show result from\"\r\n            className=\"JobBoard-input\"\r\n            onChange={props.onChangeStart}\r\n            selected={props.StartDate}\r\n          />\r\n        </Col>\r\n\r\n        <Col\r\n          xs={{ span: 7, offset: 0 }}\r\n          sm={{ span: 7, offset: 0 }}\r\n          md={{ span: 4, offset: 0 }}\r\n          lg={{ span: 4, offset: 0 }}\r\n        >\r\n          <DatePicker\r\n            placeholder=\"Show result to\"\r\n            className=\"JobBoard-input\"\r\n            onChange={props.onChangeEnd}\r\n          />\r\n        </Col>\r\n\r\n        <Col\r\n          xs={{ span: 7, offset: 0 }}\r\n          sm={{ span: 7, offset: 0 }}\r\n          md={{ span: 4, offset: 0 }}\r\n          lg={{ span: 4, offset: 0 }}\r\n        >\r\n          <Select\r\n            style={{ width: `95%`, borderRadius: `6px` }}\r\n            className=\"JobBoard-input\"\r\n            placeholder=\"All Jobs\"\r\n            onChange={props.selectResult}\r\n            value={props.job}\r\n          >\r\n            {/* <Option value=\"All\">All</Option> */}\r\n            <Option value=\"UI/UX Developer\">UI/UX Developer</Option>\r\n            <Option value=\"Computer Engineer\">Computer Engineer</Option>\r\n            <Option value=\"IT\">IT</Option>\r\n          </Select>\r\n        </Col>\r\n\r\n        <Col\r\n          xs={{ span: 20, offset: 1 }}\r\n          sm={{ span: 11, offset: 1 }}\r\n          md={{ span: 9, offset: 0 }}\r\n          lg={{ span: 10, offset: 0 }}\r\n        >\r\n          <div className=\"jobBoard\">\r\n            <Button onClick={props.applyFilter}>Apply</Button>\r\n            <Button onClick={props.resetFilter}>Reset</Button>\r\n            <Link to=\"/JobApplications\">\r\n              <Button>Table View</Button>\r\n            </Link>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default JobBoardCom;\r\n",{"ruleId":"225","replacedBy":"226"},{"ruleId":"227","replacedBy":"228"},{"ruleId":"229","severity":1,"message":"230","line":1,"column":8,"nodeType":"231","messageId":"232","endLine":1,"endColumn":12},{"ruleId":"229","severity":1,"message":"233","line":2,"column":15,"nodeType":"231","messageId":"232","endLine":2,"endColumn":18},{"ruleId":"225","replacedBy":"234"},{"ruleId":"227","replacedBy":"235"},{"ruleId":"229","severity":1,"message":"236","line":3,"column":17,"nodeType":"231","messageId":"232","endLine":3,"endColumn":25},{"ruleId":"229","severity":1,"message":"237","line":3,"column":27,"nodeType":"231","messageId":"232","endLine":3,"endColumn":36},{"ruleId":"229","severity":1,"message":"238","line":1,"column":17,"nodeType":"231","messageId":"232","endLine":1,"endColumn":27},{"ruleId":"229","severity":1,"message":"236","line":1,"column":29,"nodeType":"231","messageId":"232","endLine":1,"endColumn":37},{"ruleId":"229","severity":1,"message":"237","line":1,"column":39,"nodeType":"231","messageId":"232","endLine":1,"endColumn":48},{"ruleId":"229","severity":1,"message":"239","line":1,"column":50,"nodeType":"231","messageId":"232","endLine":1,"endColumn":56},{"ruleId":"229","severity":1,"message":"240","line":2,"column":8,"nodeType":"231","messageId":"232","endLine":2,"endColumn":16},{"ruleId":"229","severity":1,"message":"241","line":4,"column":17,"nodeType":"231","messageId":"232","endLine":4,"endColumn":22},{"ruleId":"229","severity":1,"message":"242","line":4,"column":24,"nodeType":"231","messageId":"232","endLine":4,"endColumn":34},{"ruleId":"229","severity":1,"message":"243","line":4,"column":36,"nodeType":"231","messageId":"232","endLine":4,"endColumn":41},{"ruleId":"229","severity":1,"message":"244","line":4,"column":43,"nodeType":"231","messageId":"232","endLine":4,"endColumn":49},{"ruleId":"229","severity":1,"message":"245","line":6,"column":8,"nodeType":"231","messageId":"232","endLine":6,"endColumn":12},{"ruleId":"229","severity":1,"message":"246","line":7,"column":8,"nodeType":"231","messageId":"232","endLine":7,"endColumn":15},{"ruleId":"229","severity":1,"message":"247","line":8,"column":10,"nodeType":"231","messageId":"232","endLine":8,"endColumn":14},{"ruleId":"248","severity":1,"message":"249","line":56,"column":6,"nodeType":"250","endLine":56,"endColumn":18,"suggestions":"251"},{"ruleId":"229","severity":1,"message":"252","line":95,"column":11,"nodeType":"231","messageId":"232","endLine":95,"endColumn":15},{"ruleId":"248","severity":1,"message":"253","line":95,"column":6,"nodeType":"250","endLine":95,"endColumn":18,"suggestions":"254"},{"ruleId":"229","severity":1,"message":"255","line":2,"column":8,"nodeType":"231","messageId":"232","endLine":2,"endColumn":15},{"ruleId":"248","severity":1,"message":"256","line":51,"column":6,"nodeType":"250","endLine":51,"endColumn":18,"suggestions":"257"},{"ruleId":"229","severity":1,"message":"258","line":12,"column":10,"nodeType":"231","messageId":"232","endLine":12,"endColumn":18},{"ruleId":"248","severity":1,"message":"259","line":57,"column":6,"nodeType":"250","endLine":57,"endColumn":26,"suggestions":"260"},{"ruleId":"229","severity":1,"message":"261","line":59,"column":9,"nodeType":"231","messageId":"232","endLine":59,"endColumn":25},{"ruleId":"229","severity":1,"message":"262","line":12,"column":22,"nodeType":"231","messageId":"232","endLine":12,"endColumn":35},{"ruleId":"248","severity":1,"message":"263","line":122,"column":6,"nodeType":"250","endLine":122,"endColumn":8,"suggestions":"264"},{"ruleId":"229","severity":1,"message":"265","line":5,"column":11,"nodeType":"231","messageId":"232","endLine":5,"endColumn":17},{"ruleId":"229","severity":1,"message":"266","line":6,"column":12,"nodeType":"231","messageId":"232","endLine":6,"endColumn":20},{"ruleId":"229","severity":1,"message":"236","line":2,"column":10,"nodeType":"231","messageId":"232","endLine":2,"endColumn":18},{"ruleId":"229","severity":1,"message":"237","line":5,"column":27,"nodeType":"231","messageId":"232","endLine":5,"endColumn":36},{"ruleId":"267","severity":2,"message":"268","line":9,"column":43,"nodeType":"231","endLine":9,"endColumn":51},{"ruleId":"229","severity":1,"message":"237","line":5,"column":27,"nodeType":"231","messageId":"232","endLine":5,"endColumn":36},{"ruleId":"229","severity":1,"message":"265","line":5,"column":11,"nodeType":"231","messageId":"232","endLine":5,"endColumn":17},{"ruleId":"229","severity":1,"message":"266","line":6,"column":12,"nodeType":"231","messageId":"232","endLine":6,"endColumn":20},{"ruleId":"269","severity":1,"message":"270","line":23,"column":25,"nodeType":"271","messageId":"272","endLine":23,"endColumn":27},{"ruleId":"248","severity":1,"message":"273","line":25,"column":25,"nodeType":"274","endLine":25,"endColumn":42},{"ruleId":"248","severity":1,"message":"275","line":27,"column":23,"nodeType":"274","endLine":27,"endColumn":38},{"ruleId":"248","severity":1,"message":"276","line":29,"column":27,"nodeType":"274","endLine":29,"endColumn":46},{"ruleId":"248","severity":1,"message":"277","line":31,"column":23,"nodeType":"274","endLine":31,"endColumn":38},{"ruleId":"248","severity":1,"message":"278","line":56,"column":6,"nodeType":"250","endLine":56,"endColumn":18,"suggestions":"279"},{"ruleId":"229","severity":1,"message":"241","line":1,"column":10,"nodeType":"231","messageId":"232","endLine":1,"endColumn":15},"no-native-reassign",["280"],"no-negated-in-lhs",["281"],"no-unused-vars","'main' is defined but never used.","Identifier","unusedVar","'Col' is defined but never used.",["280"],["281"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'useContext' is defined but never used.","'useRef' is defined but never used.","'ReactDOM' is defined but never used.","'Input' is defined but never used.","'Popconfirm' is defined but never used.","'Space' is defined but never used.","'Select' is defined but never used.","'edit' is defined but never used.","'deletee' is defined but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'resultSkills'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setResultTemp' needs the current value of 'resultSkills'.","ArrayExpression",["282"],"'temp' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'result'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setResultTemp' needs the current value of 'result'.",["283"],"'Buttons' is defined but never used.","React Hook useEffect has a missing dependency: 'resultCatTable'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setResultTemp' needs the current value of 'resultCatTable'.",["284"],"'location' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'resultLocationTable'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setResultTempLocation' needs the current value of 'resultLocationTable'.",["285"],"'onChangeLocation' is assigned a value but never used.","'setDataSource' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dataSource'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setResult' needs the current value of 'dataSource'.",["286"],"'Search' is assigned a value but never used.","'onChange' is defined but never used.","react-hooks/rules-of-hooks","React Hook \"useState\" is called in function \"jobOpening\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Assignments to the 'countApplied1' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","BinaryExpression","Assignments to the 'countPhone2' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'countInterview3' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'countHired4' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","React Hook useEffect has a missing dependency: 'tasks'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setResultTemp' needs the current value of 'tasks'.",["287"],"no-global-assign","no-unsafe-negation",{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},{"desc":"298","fix":"299"},"Update the dependencies array to be: [resultSkills, resultTemp]",{"range":"300","text":"301"},"Update the dependencies array to be: [result, resultTemp]",{"range":"302","text":"303"},"Update the dependencies array to be: [resultCatTable, resultTemp]",{"range":"304","text":"305"},"Update the dependencies array to be: [resultLocationTable, resultTempLocation]",{"range":"306","text":"307"},"Update the dependencies array to be: [dataSource]",{"range":"308","text":"309"},"Update the dependencies array to be: [resultTemp, tasks]",{"range":"310","text":"311"},[1596,1608],"[resultSkills, resultTemp]",[2488,2500],"[result, resultTemp]",[1524,1536],"[resultCatTable, resultTemp]",[1690,1710],"[resultLocationTable, resultTempLocation]",[2785,2787],"[dataSource]",[1476,1488],"[resultTemp, tasks]"]